Grammar

    0 $accept: begin $end

    1 data_type: TRIVIAL_TIP
    2          | SIGN_TIP
    3          | TIP_SIGN SIGN_TIP

    4 const_numeric_value: INT_VAL
    5                    | DOUBLE_VAL

    6 const_string_value: CHAR_VAL
    7                   | STRING_VAL

    8 const_value: const_string_value
    9            | const_numeric_value

   10 str_exp_val: expr

   11 variable_idendifier: ID
   12                    | variable_idendifier ',' ID

   13 variable_dec: data_type variable_idendifier ';'
   14             | CONST data_type variable_idendifier ';'
   15             | data_type ID ASSIGN str_exp_val ';'
   16             | CONST data_type ID ASSIGN str_exp_val ';'

   17 statement: variable_dec
   18          | function_call
   19          | if_statement
   20          | for_statement
   21          | while_statement
   22          | dowhile_statement
   23          | asign_statement
   24          | eval_statement
   25          | return_statement
   26          | print_statement

   27 return_statement: RETURN expr

   28 print_statement: PRINT '(' caller_params ')' ';'

   29 statement_list: statement
   30               | statement_list statement

   31 ref_val: ID
   32        | ID PMEM ID
   33        | ID '.' ID

   34 caller_params: expr
   35              | expr ',' caller_params

   36 function_call: ID '(' caller_params ')' ';'
   37              | ID '(' ')' ';'

   38 block: '{' statement_list '}'
   39      | statement

   40 asign_statement: ref_val ASSIGN expr ';'
   41                | ref_val MUL_ASSIGN expr ';'
   42                | ref_val MOD_ASSIGN expr ';'
   43                | ref_val ADD_ASSIGN expr ';'
   44                | ref_val MIN_ASSIGN expr ';'
   45                | ref_val DIV_ASSIGN expr ';'

   46 eval_statement: EVAL '(' '"' arhimetic_expr '"' ')' ';'

   47 calc_statement: CALC '(' '"' arhimetic_expr '"' ')' ';'

   48 loop_init: statement
   49          | %empty

   50 stop_cond: lo_expr
   51          | %empty

   52 loop_step: expr
   53          | %empty

   54 condition: '(' stop_cond ')'

   55 for_statement: FOR '(' loop_init ';' stop_cond ';' loop_step ')' block

   56 dowhile_statement: DO block WHILE condition ';'

   57 while_statement: WHILE condition block

   58 if_head: IF condition block

   59 if_else: ELSE block

   60 if_statement: if_head if_else

   61 lo_expr: NOT lo_expr
   62        | lo_expr AND lo_expr
   63        | lo_expr OR lo_expr
   64        | arhimetic_operand GREATER arhimetic_operand
   65        | arhimetic_operand LOWER arhimetic_operand
   66        | arhimetic_operand EQUAL arhimetic_operand
   67        | arhimetic_operand NOT_EQ arhimetic_operand
   68        | arhimetic_operand LOWER_EQ arhimetic_operand
   69        | arhimetic_operand GREATER_EQ arhimetic_operand
   70        | '(' lo_expr ')'

   71 numeric_val: ref_val
   72            | function_call
   73            | const_numeric_value

   74 arhimetic_operand: numeric_val
   75                  | arhimetic_operand INCR
   76                  | arhimetic_operand DECR
   77                  | INCR arhimetic_operand
   78                  | DECR arhimetic_operand
   79                  | '(' arhimetic_expr ')'

   80 arhimetic_expr: arhimetic_operand
   81               | arhimetic_operand ADD arhimetic_operand
   82               | arhimetic_operand MIN arhimetic_operand
   83               | arhimetic_operand MUL arhimetic_operand
   84               | arhimetic_operand DIV arhimetic_operand
   85               | arhimetic_operand MOD arhimetic_operand

   86 expr: arhimetic_expr
   87     | calc_statement

   88 no_parameter: data_type ID

   89 op_parameter: data_type ID ASSIGN const_value

   90 no_parameter_list: no_parameter
   91                  | no_parameter ',' no_parameter_list

   92 op_parameter_list: op_parameter ',' op_parameter_list
   93                  | no_parameter_list
   94                  | op_parameter

   95 parameter_list: op_parameter_list

   96 function_head: data_type ID '(' parameter_list ')'
   97              | data_type ID '(' ')'

   98 function_dec: function_head ';'

   99 function_def: function_head '{' statement_list '}' ';'

  100 function: function_dec
  101         | function_def

  102 acces_modifier: ACCESMODIF ':'

  103 member_declarations: variable_dec
  104                    | STATIC variable_dec
  105                    | function_dec
  106                    | STATIC function_dec

  107 struct_member: member_declarations
  108              | acces_modifier member_declarations

  109 struct_body: struct_member
  110            | struct_body struct_member

  111 struct_head: ID
  112            | ID '{' struct_body '}'
  113            | ID '{' struct_body '}' variable_idendifier

  114 struct_dec: STRUCT struct_head ';'
  115           | CLASS struct_head ';'

  116 declarations: variable_dec declarations
  117             | struct_dec declarations
  118             | function declarations
  119             | function
  120             | struct_dec
  121             | variable_dec

  122 begin: declarations


Terminals, with rules where they appear

    $end (0) 0
    '"' (34) 46 47
    '(' (40) 28 36 37 46 47 54 55 70 79 96 97
    ')' (41) 28 36 37 46 47 54 55 70 79 96 97
    ',' (44) 12 35 91 92
    '.' (46) 33
    ':' (58) 102
    ';' (59) 13 14 15 16 28 36 37 40 41 42 43 44 45 46 47 55 56 98 99 114 115
    '{' (123) 38 99 112 113
    '}' (125) 38 99 112 113
    error (256)
    SIGN_TIP <str> (258) 2 3
    TRIVIAL_TIP <str> (259) 1
    TIP_SIGN <num> (260) 3
    ID <str> (261) 11 12 15 16 31 32 33 36 37 88 89 96 97 111 112 113
    CHAR_VAL <str> (262) 6
    STRING_VAL <str> (263) 7
    INT_VAL <num> (264) 4
    DOUBLE_VAL <rnum> (265) 5
    ASSIGN (266) 15 16 40 89
    MUL_ASSIGN (267) 41
    MOD_ASSIGN (268) 42
    ADD_ASSIGN (269) 43
    MIN_ASSIGN (270) 44
    DIV_ASSIGN (271) 45
    EQUAL (272) 66
    NOT_EQ (273) 67
    LOWER_EQ (274) 68
    GREATER_EQ (275) 69
    GREATER (276) 64
    LOWER (277) 65
    EVAL (278) 46
    CALC (279) 47
    CONST (280) 14 16
    STATIC (281) 104 106
    PRINT (282) 28
    PMEM (283) 32
    RETURN (284) 27
    IF (285) 58
    ELSE (286) 59
    WHILE (287) 56 57
    DO (288) 56
    FOR (289) 55
    STRUCT (290) 114
    CLASS (291) 115
    ACCESMODIF (292) 102
    NOT (293) 61
    AND (294) 62
    OR (295) 63
    MUL (296) 83
    DIV (297) 84
    MOD (298) 85
    ADD (299) 81
    MIN (300) 82
    INCR (301) 75 77
    DECR (302) 76 78


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    data_type <str> (58)
        on left: 1 2 3
        on right: 13 14 15 16 88 89 96 97
    const_numeric_value <rnum> (59)
        on left: 4 5
        on right: 9 73
    const_string_value <str> (60)
        on left: 6 7
        on right: 8
    const_value <str> (61)
        on left: 8 9
        on right: 89
    str_exp_val <str> (62)
        on left: 10
        on right: 15 16
    variable_idendifier (63)
        on left: 11 12
        on right: 12 13 14 113
    variable_dec (64)
        on left: 13 14 15 16
        on right: 17 103 104 116 121
    statement (65)
        on left: 17 18 19 20 21 22 23 24 25 26
        on right: 29 30 39 48
    return_statement (66)
        on left: 27
        on right: 25
    print_statement (67)
        on left: 28
        on right: 26
    statement_list (68)
        on left: 29 30
        on right: 30 38 99
    ref_val <rnum> (69)
        on left: 31 32 33
        on right: 40 41 42 43 44 45 71
    caller_params (70)
        on left: 34 35
        on right: 28 35 36
    function_call <rnum> (71)
        on left: 36 37
        on right: 18 72
    block (72)
        on left: 38 39
        on right: 55 56 57 58 59
    asign_statement (73)
        on left: 40 41 42 43 44 45
        on right: 23
    eval_statement (74)
        on left: 46
        on right: 24
    calc_statement <rnum> (75)
        on left: 47
        on right: 87
    loop_init (76)
        on left: 48 49
        on right: 55
    stop_cond (77)
        on left: 50 51
        on right: 54 55
    loop_step (78)
        on left: 52 53
        on right: 55
    condition (79)
        on left: 54
        on right: 56 57 58
    for_statement (80)
        on left: 55
        on right: 20
    dowhile_statement (81)
        on left: 56
        on right: 22
    while_statement (82)
        on left: 57
        on right: 21
    if_head (83)
        on left: 58
        on right: 60
    if_else (84)
        on left: 59
        on right: 60
    if_statement (85)
        on left: 60
        on right: 19
    lo_expr <num> (86)
        on left: 61 62 63 64 65 66 67 68 69 70
        on right: 50 61 62 63 70
    numeric_val <rnum> (87)
        on left: 71 72 73
        on right: 74
    arhimetic_operand <rnum> (88)
        on left: 74 75 76 77 78 79
        on right: 64 65 66 67 68 69 75 76 77 78 80 81 82 83 84 85
    arhimetic_expr <rnum> (89)
        on left: 80 81 82 83 84 85
        on right: 46 47 79 86
    expr <rnum> (90)
        on left: 86 87
        on right: 10 27 34 35 40 41 42 43 44 45 52
    no_parameter (91)
        on left: 88
        on right: 90 91
    op_parameter (92)
        on left: 89
        on right: 92 94
    no_parameter_list (93)
        on left: 90 91
        on right: 91 93
    op_parameter_list (94)
        on left: 92 93 94
        on right: 92 95
    parameter_list (95)
        on left: 95
        on right: 96
    function_head (96)
        on left: 96 97
        on right: 98 99
    function_dec (97)
        on left: 98
        on right: 100 105 106
    function_def (98)
        on left: 99
        on right: 101
    function (99)
        on left: 100 101
        on right: 118 119
    acces_modifier (100)
        on left: 102
        on right: 108
    member_declarations (101)
        on left: 103 104 105 106
        on right: 107 108
    struct_member (102)
        on left: 107 108
        on right: 109 110
    struct_body (103)
        on left: 109 110
        on right: 110 112 113
    struct_head (104)
        on left: 111 112 113
        on right: 114 115
    struct_dec (105)
        on left: 114 115
        on right: 117 120
    declarations (106)
        on left: 116 117 118 119 120 121
        on right: 116 117 118 122
    begin (107)
        on left: 122
        on right: 0


State 0

    0 $accept: . begin $end
    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   96 function_head: . data_type ID '(' parameter_list ')'
   97              | . data_type ID '(' ')'
   98 function_dec: . function_head ';'
   99 function_def: . function_head '{' statement_list '}' ';'
  100 function: . function_dec
  101         | . function_def
  114 struct_dec: . STRUCT struct_head ';'
  115           | . CLASS struct_head ';'
  116 declarations: . variable_dec declarations
  117             | . struct_dec declarations
  118             | . function declarations
  119             | . function
  120             | . struct_dec
  121             | . variable_dec
  122 begin: . declarations

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    CONST        shift, and go to state 4
    STRUCT       shift, and go to state 5
    CLASS        shift, and go to state 6

    data_type      go to state 7
    variable_dec   go to state 8
    function_head  go to state 9
    function_dec   go to state 10
    function_def   go to state 11
    function       go to state 12
    struct_dec     go to state 13
    declarations   go to state 14
    begin          go to state 15


State 1

    2 data_type: SIGN_TIP .

    $default  reduce using rule 2 (data_type)


State 2

    1 data_type: TRIVIAL_TIP .

    $default  reduce using rule 1 (data_type)


State 3

    3 data_type: TIP_SIGN . SIGN_TIP

    SIGN_TIP  shift, and go to state 16


State 4

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   14 variable_dec: CONST . data_type variable_idendifier ';'
   16             | CONST . data_type ID ASSIGN str_exp_val ';'

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3

    data_type  go to state 17


State 5

  111 struct_head: . ID
  112            | . ID '{' struct_body '}'
  113            | . ID '{' struct_body '}' variable_idendifier
  114 struct_dec: STRUCT . struct_head ';'

    ID  shift, and go to state 18

    struct_head  go to state 19


State 6

  111 struct_head: . ID
  112            | . ID '{' struct_body '}'
  113            | . ID '{' struct_body '}' variable_idendifier
  115 struct_dec: CLASS . struct_head ';'

    ID  shift, and go to state 18

    struct_head  go to state 20


State 7

   11 variable_idendifier: . ID
   12                    | . variable_idendifier ',' ID
   13 variable_dec: data_type . variable_idendifier ';'
   15             | data_type . ID ASSIGN str_exp_val ';'
   96 function_head: data_type . ID '(' parameter_list ')'
   97              | data_type . ID '(' ')'

    ID  shift, and go to state 21

    variable_idendifier  go to state 22


State 8

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   96 function_head: . data_type ID '(' parameter_list ')'
   97              | . data_type ID '(' ')'
   98 function_dec: . function_head ';'
   99 function_def: . function_head '{' statement_list '}' ';'
  100 function: . function_dec
  101         | . function_def
  114 struct_dec: . STRUCT struct_head ';'
  115           | . CLASS struct_head ';'
  116 declarations: . variable_dec declarations
  116             | variable_dec . declarations
  117             | . struct_dec declarations
  118             | . function declarations
  119             | . function
  120             | . struct_dec
  121             | . variable_dec
  121             | variable_dec .  [$end]

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    CONST        shift, and go to state 4
    STRUCT       shift, and go to state 5
    CLASS        shift, and go to state 6

    $default  reduce using rule 121 (declarations)

    data_type      go to state 7
    variable_dec   go to state 8
    function_head  go to state 9
    function_dec   go to state 10
    function_def   go to state 11
    function       go to state 12
    struct_dec     go to state 13
    declarations   go to state 23


State 9

   98 function_dec: function_head . ';'
   99 function_def: function_head . '{' statement_list '}' ';'

    ';'  shift, and go to state 24
    '{'  shift, and go to state 25


State 10

  100 function: function_dec .

    $default  reduce using rule 100 (function)


State 11

  101 function: function_def .

    $default  reduce using rule 101 (function)


State 12

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   96 function_head: . data_type ID '(' parameter_list ')'
   97              | . data_type ID '(' ')'
   98 function_dec: . function_head ';'
   99 function_def: . function_head '{' statement_list '}' ';'
  100 function: . function_dec
  101         | . function_def
  114 struct_dec: . STRUCT struct_head ';'
  115           | . CLASS struct_head ';'
  116 declarations: . variable_dec declarations
  117             | . struct_dec declarations
  118             | . function declarations
  118             | function . declarations
  119             | . function
  119             | function .  [$end]
  120             | . struct_dec
  121             | . variable_dec

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    CONST        shift, and go to state 4
    STRUCT       shift, and go to state 5
    CLASS        shift, and go to state 6

    $default  reduce using rule 119 (declarations)

    data_type      go to state 7
    variable_dec   go to state 8
    function_head  go to state 9
    function_dec   go to state 10
    function_def   go to state 11
    function       go to state 12
    struct_dec     go to state 13
    declarations   go to state 26


State 13

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   96 function_head: . data_type ID '(' parameter_list ')'
   97              | . data_type ID '(' ')'
   98 function_dec: . function_head ';'
   99 function_def: . function_head '{' statement_list '}' ';'
  100 function: . function_dec
  101         | . function_def
  114 struct_dec: . STRUCT struct_head ';'
  115           | . CLASS struct_head ';'
  116 declarations: . variable_dec declarations
  117             | . struct_dec declarations
  117             | struct_dec . declarations
  118             | . function declarations
  119             | . function
  120             | . struct_dec
  120             | struct_dec .  [$end]
  121             | . variable_dec

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    CONST        shift, and go to state 4
    STRUCT       shift, and go to state 5
    CLASS        shift, and go to state 6

    $default  reduce using rule 120 (declarations)

    data_type      go to state 7
    variable_dec   go to state 8
    function_head  go to state 9
    function_dec   go to state 10
    function_def   go to state 11
    function       go to state 12
    struct_dec     go to state 13
    declarations   go to state 27


State 14

  122 begin: declarations .

    $default  reduce using rule 122 (begin)


State 15

    0 $accept: begin . $end

    $end  shift, and go to state 28


State 16

    3 data_type: TIP_SIGN SIGN_TIP .

    $default  reduce using rule 3 (data_type)


State 17

   11 variable_idendifier: . ID
   12                    | . variable_idendifier ',' ID
   14 variable_dec: CONST data_type . variable_idendifier ';'
   16             | CONST data_type . ID ASSIGN str_exp_val ';'

    ID  shift, and go to state 29

    variable_idendifier  go to state 30


State 18

  111 struct_head: ID .  [';']
  112            | ID . '{' struct_body '}'
  113            | ID . '{' struct_body '}' variable_idendifier

    '{'  shift, and go to state 31

    $default  reduce using rule 111 (struct_head)


State 19

  114 struct_dec: STRUCT struct_head . ';'

    ';'  shift, and go to state 32


State 20

  115 struct_dec: CLASS struct_head . ';'

    ';'  shift, and go to state 33


State 21

   11 variable_idendifier: ID .  [',', ';']
   15 variable_dec: data_type ID . ASSIGN str_exp_val ';'
   96 function_head: data_type ID . '(' parameter_list ')'
   97              | data_type ID . '(' ')'

    ASSIGN  shift, and go to state 34
    '('     shift, and go to state 35

    $default  reduce using rule 11 (variable_idendifier)


State 22

   12 variable_idendifier: variable_idendifier . ',' ID
   13 variable_dec: data_type variable_idendifier . ';'

    ','  shift, and go to state 36
    ';'  shift, and go to state 37


State 23

  116 declarations: variable_dec declarations .

    $default  reduce using rule 116 (declarations)


State 24

   98 function_dec: function_head ';' .

    $default  reduce using rule 98 (function_dec)


State 25

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   17 statement: . variable_dec
   18          | . function_call
   19          | . if_statement
   20          | . for_statement
   21          | . while_statement
   22          | . dowhile_statement
   23          | . asign_statement
   24          | . eval_statement
   25          | . return_statement
   26          | . print_statement
   27 return_statement: . RETURN expr
   28 print_statement: . PRINT '(' caller_params ')' ';'
   29 statement_list: . statement
   30               | . statement_list statement
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   40 asign_statement: . ref_val ASSIGN expr ';'
   41                | . ref_val MUL_ASSIGN expr ';'
   42                | . ref_val MOD_ASSIGN expr ';'
   43                | . ref_val ADD_ASSIGN expr ';'
   44                | . ref_val MIN_ASSIGN expr ';'
   45                | . ref_val DIV_ASSIGN expr ';'
   46 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   55 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   56 dowhile_statement: . DO block WHILE condition ';'
   57 while_statement: . WHILE condition block
   58 if_head: . IF condition block
   60 if_statement: . if_head if_else
   99 function_def: function_head '{' . statement_list '}' ';'

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 38
    EVAL         shift, and go to state 39
    CONST        shift, and go to state 4
    PRINT        shift, and go to state 40
    RETURN       shift, and go to state 41
    IF           shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45

    data_type          go to state 46
    variable_dec       go to state 47
    statement          go to state 48
    return_statement   go to state 49
    print_statement    go to state 50
    statement_list     go to state 51
    ref_val            go to state 52
    function_call      go to state 53
    asign_statement    go to state 54
    eval_statement     go to state 55
    for_statement      go to state 56
    dowhile_statement  go to state 57
    while_statement    go to state 58
    if_head            go to state 59
    if_statement       go to state 60


State 26

  118 declarations: function declarations .

    $default  reduce using rule 118 (declarations)


State 27

  117 declarations: struct_dec declarations .

    $default  reduce using rule 117 (declarations)


State 28

    0 $accept: begin $end .

    $default  accept


State 29

   11 variable_idendifier: ID .  [',', ';']
   16 variable_dec: CONST data_type ID . ASSIGN str_exp_val ';'

    ASSIGN  shift, and go to state 61

    $default  reduce using rule 11 (variable_idendifier)


State 30

   12 variable_idendifier: variable_idendifier . ',' ID
   14 variable_dec: CONST data_type variable_idendifier . ';'

    ','  shift, and go to state 36
    ';'  shift, and go to state 62


State 31

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   96 function_head: . data_type ID '(' parameter_list ')'
   97              | . data_type ID '(' ')'
   98 function_dec: . function_head ';'
  102 acces_modifier: . ACCESMODIF ':'
  103 member_declarations: . variable_dec
  104                    | . STATIC variable_dec
  105                    | . function_dec
  106                    | . STATIC function_dec
  107 struct_member: . member_declarations
  108              | . acces_modifier member_declarations
  109 struct_body: . struct_member
  110            | . struct_body struct_member
  112 struct_head: ID '{' . struct_body '}'
  113            | ID '{' . struct_body '}' variable_idendifier

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    CONST        shift, and go to state 4
    STATIC       shift, and go to state 63
    ACCESMODIF   shift, and go to state 64

    data_type            go to state 7
    variable_dec         go to state 65
    function_head        go to state 66
    function_dec         go to state 67
    acces_modifier       go to state 68
    member_declarations  go to state 69
    struct_member        go to state 70
    struct_body          go to state 71


State 32

  114 struct_dec: STRUCT struct_head ';' .

    $default  reduce using rule 114 (struct_dec)


State 33

  115 struct_dec: CLASS struct_head ';' .

    $default  reduce using rule 115 (struct_dec)


State 34

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   10 str_exp_val: . expr
   15 variable_dec: data_type ID ASSIGN . str_exp_val ';'
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   47 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand
   86 expr: . arhimetic_expr
   87     | . calc_statement

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    CALC        shift, and go to state 74
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    str_exp_val          go to state 79
    ref_val              go to state 80
    function_call        go to state 81
    calc_statement       go to state 82
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 85
    expr                 go to state 86


State 35

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   88 no_parameter: . data_type ID
   89 op_parameter: . data_type ID ASSIGN const_value
   90 no_parameter_list: . no_parameter
   91                  | . no_parameter ',' no_parameter_list
   92 op_parameter_list: . op_parameter ',' op_parameter_list
   93                  | . no_parameter_list
   94                  | . op_parameter
   95 parameter_list: . op_parameter_list
   96 function_head: data_type ID '(' . parameter_list ')'
   97              | data_type ID '(' . ')'

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ')'          shift, and go to state 87

    data_type          go to state 88
    no_parameter       go to state 89
    op_parameter       go to state 90
    no_parameter_list  go to state 91
    op_parameter_list  go to state 92
    parameter_list     go to state 93


State 36

   12 variable_idendifier: variable_idendifier ',' . ID

    ID  shift, and go to state 94


State 37

   13 variable_dec: data_type variable_idendifier ';' .

    $default  reduce using rule 13 (variable_dec)


State 38

   31 ref_val: ID .  [SIGN_TIP, TRIVIAL_TIP, TIP_SIGN, ID, ASSIGN, MUL_ASSIGN, MOD_ASSIGN, ADD_ASSIGN, MIN_ASSIGN, DIV_ASSIGN, EQUAL, NOT_EQ, LOWER_EQ, GREATER_EQ, GREATER, LOWER, EVAL, CONST, PRINT, RETURN, IF, ELSE, WHILE, DO, FOR, AND, OR, MUL, DIV, MOD, ADD, MIN, INCR, DECR, ',', ';', ')', '}', '"']
   32        | ID . PMEM ID
   33        | ID . '.' ID
   36 function_call: ID . '(' caller_params ')' ';'
   37              | ID . '(' ')' ';'

    PMEM  shift, and go to state 95
    '('   shift, and go to state 96
    '.'   shift, and go to state 97

    $default  reduce using rule 31 (ref_val)


State 39

   46 eval_statement: EVAL . '(' '"' arhimetic_expr '"' ')' ';'

    '('  shift, and go to state 98


State 40

   28 print_statement: PRINT . '(' caller_params ')' ';'

    '('  shift, and go to state 99


State 41

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   27 return_statement: RETURN . expr
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   47 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand
   86 expr: . arhimetic_expr
   87     | . calc_statement

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    CALC        shift, and go to state 74
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    calc_statement       go to state 82
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 85
    expr                 go to state 100


State 42

   54 condition: . '(' stop_cond ')'
   58 if_head: IF . condition block

    '('  shift, and go to state 101

    condition  go to state 102


State 43

   54 condition: . '(' stop_cond ')'
   57 while_statement: WHILE . condition block

    '('  shift, and go to state 101

    condition  go to state 103


State 44

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   17 statement: . variable_dec
   18          | . function_call
   19          | . if_statement
   20          | . for_statement
   21          | . while_statement
   22          | . dowhile_statement
   23          | . asign_statement
   24          | . eval_statement
   25          | . return_statement
   26          | . print_statement
   27 return_statement: . RETURN expr
   28 print_statement: . PRINT '(' caller_params ')' ';'
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   38 block: . '{' statement_list '}'
   39      | . statement
   40 asign_statement: . ref_val ASSIGN expr ';'
   41                | . ref_val MUL_ASSIGN expr ';'
   42                | . ref_val MOD_ASSIGN expr ';'
   43                | . ref_val ADD_ASSIGN expr ';'
   44                | . ref_val MIN_ASSIGN expr ';'
   45                | . ref_val DIV_ASSIGN expr ';'
   46 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   55 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   56 dowhile_statement: . DO block WHILE condition ';'
   56                  | DO . block WHILE condition ';'
   57 while_statement: . WHILE condition block
   58 if_head: . IF condition block
   60 if_statement: . if_head if_else

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 38
    EVAL         shift, and go to state 39
    CONST        shift, and go to state 4
    PRINT        shift, and go to state 40
    RETURN       shift, and go to state 41
    IF           shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45
    '{'          shift, and go to state 104

    data_type          go to state 46
    variable_dec       go to state 47
    statement          go to state 105
    return_statement   go to state 49
    print_statement    go to state 50
    ref_val            go to state 52
    function_call      go to state 53
    block              go to state 106
    asign_statement    go to state 54
    eval_statement     go to state 55
    for_statement      go to state 56
    dowhile_statement  go to state 57
    while_statement    go to state 58
    if_head            go to state 59
    if_statement       go to state 60


State 45

   55 for_statement: FOR . '(' loop_init ';' stop_cond ';' loop_step ')' block

    '('  shift, and go to state 107


State 46

   11 variable_idendifier: . ID
   12                    | . variable_idendifier ',' ID
   13 variable_dec: data_type . variable_idendifier ';'
   15             | data_type . ID ASSIGN str_exp_val ';'

    ID  shift, and go to state 108

    variable_idendifier  go to state 22


State 47

   17 statement: variable_dec .

    $default  reduce using rule 17 (statement)


State 48

   29 statement_list: statement .

    $default  reduce using rule 29 (statement_list)


State 49

   25 statement: return_statement .

    $default  reduce using rule 25 (statement)


State 50

   26 statement: print_statement .

    $default  reduce using rule 26 (statement)


State 51

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   17 statement: . variable_dec
   18          | . function_call
   19          | . if_statement
   20          | . for_statement
   21          | . while_statement
   22          | . dowhile_statement
   23          | . asign_statement
   24          | . eval_statement
   25          | . return_statement
   26          | . print_statement
   27 return_statement: . RETURN expr
   28 print_statement: . PRINT '(' caller_params ')' ';'
   30 statement_list: statement_list . statement
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   40 asign_statement: . ref_val ASSIGN expr ';'
   41                | . ref_val MUL_ASSIGN expr ';'
   42                | . ref_val MOD_ASSIGN expr ';'
   43                | . ref_val ADD_ASSIGN expr ';'
   44                | . ref_val MIN_ASSIGN expr ';'
   45                | . ref_val DIV_ASSIGN expr ';'
   46 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   55 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   56 dowhile_statement: . DO block WHILE condition ';'
   57 while_statement: . WHILE condition block
   58 if_head: . IF condition block
   60 if_statement: . if_head if_else
   99 function_def: function_head '{' statement_list . '}' ';'

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 38
    EVAL         shift, and go to state 39
    CONST        shift, and go to state 4
    PRINT        shift, and go to state 40
    RETURN       shift, and go to state 41
    IF           shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45
    '}'          shift, and go to state 109

    data_type          go to state 46
    variable_dec       go to state 47
    statement          go to state 110
    return_statement   go to state 49
    print_statement    go to state 50
    ref_val            go to state 52
    function_call      go to state 53
    asign_statement    go to state 54
    eval_statement     go to state 55
    for_statement      go to state 56
    dowhile_statement  go to state 57
    while_statement    go to state 58
    if_head            go to state 59
    if_statement       go to state 60


State 52

   40 asign_statement: ref_val . ASSIGN expr ';'
   41                | ref_val . MUL_ASSIGN expr ';'
   42                | ref_val . MOD_ASSIGN expr ';'
   43                | ref_val . ADD_ASSIGN expr ';'
   44                | ref_val . MIN_ASSIGN expr ';'
   45                | ref_val . DIV_ASSIGN expr ';'

    ASSIGN      shift, and go to state 111
    MUL_ASSIGN  shift, and go to state 112
    MOD_ASSIGN  shift, and go to state 113
    ADD_ASSIGN  shift, and go to state 114
    MIN_ASSIGN  shift, and go to state 115
    DIV_ASSIGN  shift, and go to state 116


State 53

   18 statement: function_call .

    $default  reduce using rule 18 (statement)


State 54

   23 statement: asign_statement .

    $default  reduce using rule 23 (statement)


State 55

   24 statement: eval_statement .

    $default  reduce using rule 24 (statement)


State 56

   20 statement: for_statement .

    $default  reduce using rule 20 (statement)


State 57

   22 statement: dowhile_statement .

    $default  reduce using rule 22 (statement)


State 58

   21 statement: while_statement .

    $default  reduce using rule 21 (statement)


State 59

   59 if_else: . ELSE block
   60 if_statement: if_head . if_else

    ELSE  shift, and go to state 117

    if_else  go to state 118


State 60

   19 statement: if_statement .

    $default  reduce using rule 19 (statement)


State 61

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   10 str_exp_val: . expr
   16 variable_dec: CONST data_type ID ASSIGN . str_exp_val ';'
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   47 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand
   86 expr: . arhimetic_expr
   87     | . calc_statement

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    CALC        shift, and go to state 74
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    str_exp_val          go to state 119
    ref_val              go to state 80
    function_call        go to state 81
    calc_statement       go to state 82
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 85
    expr                 go to state 86


State 62

   14 variable_dec: CONST data_type variable_idendifier ';' .

    $default  reduce using rule 14 (variable_dec)


State 63

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   96 function_head: . data_type ID '(' parameter_list ')'
   97              | . data_type ID '(' ')'
   98 function_dec: . function_head ';'
  104 member_declarations: STATIC . variable_dec
  106                    | STATIC . function_dec

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    CONST        shift, and go to state 4

    data_type      go to state 7
    variable_dec   go to state 120
    function_head  go to state 66
    function_dec   go to state 121


State 64

  102 acces_modifier: ACCESMODIF . ':'

    ':'  shift, and go to state 122


State 65

  103 member_declarations: variable_dec .

    $default  reduce using rule 103 (member_declarations)


State 66

   98 function_dec: function_head . ';'

    ';'  shift, and go to state 24


State 67

  105 member_declarations: function_dec .

    $default  reduce using rule 105 (member_declarations)


State 68

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   96 function_head: . data_type ID '(' parameter_list ')'
   97              | . data_type ID '(' ')'
   98 function_dec: . function_head ';'
  103 member_declarations: . variable_dec
  104                    | . STATIC variable_dec
  105                    | . function_dec
  106                    | . STATIC function_dec
  108 struct_member: acces_modifier . member_declarations

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    CONST        shift, and go to state 4
    STATIC       shift, and go to state 63

    data_type            go to state 7
    variable_dec         go to state 65
    function_head        go to state 66
    function_dec         go to state 67
    member_declarations  go to state 123


State 69

  107 struct_member: member_declarations .

    $default  reduce using rule 107 (struct_member)


State 70

  109 struct_body: struct_member .

    $default  reduce using rule 109 (struct_body)


State 71

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   96 function_head: . data_type ID '(' parameter_list ')'
   97              | . data_type ID '(' ')'
   98 function_dec: . function_head ';'
  102 acces_modifier: . ACCESMODIF ':'
  103 member_declarations: . variable_dec
  104                    | . STATIC variable_dec
  105                    | . function_dec
  106                    | . STATIC function_dec
  107 struct_member: . member_declarations
  108              | . acces_modifier member_declarations
  110 struct_body: struct_body . struct_member
  112 struct_head: ID '{' struct_body . '}'
  113            | ID '{' struct_body . '}' variable_idendifier

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    CONST        shift, and go to state 4
    STATIC       shift, and go to state 63
    ACCESMODIF   shift, and go to state 64
    '}'          shift, and go to state 124

    data_type            go to state 7
    variable_dec         go to state 65
    function_head        go to state 66
    function_dec         go to state 67
    acces_modifier       go to state 68
    member_declarations  go to state 69
    struct_member        go to state 125


State 72

    4 const_numeric_value: INT_VAL .

    $default  reduce using rule 4 (const_numeric_value)


State 73

    5 const_numeric_value: DOUBLE_VAL .

    $default  reduce using rule 5 (const_numeric_value)


State 74

   47 calc_statement: CALC . '(' '"' arhimetic_expr '"' ')' ';'

    '('  shift, and go to state 126


State 75

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   77                  | INCR . arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 127


State 76

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   78                  | DECR . arhimetic_operand
   79                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 128


State 77

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   79                  | '(' . arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 129


State 78

   73 numeric_val: const_numeric_value .

    $default  reduce using rule 73 (numeric_val)


State 79

   15 variable_dec: data_type ID ASSIGN str_exp_val . ';'

    ';'  shift, and go to state 130


State 80

   71 numeric_val: ref_val .

    $default  reduce using rule 71 (numeric_val)


State 81

   72 numeric_val: function_call .

    $default  reduce using rule 72 (numeric_val)


State 82

   87 expr: calc_statement .

    $default  reduce using rule 87 (expr)


State 83

   74 arhimetic_operand: numeric_val .

    $default  reduce using rule 74 (arhimetic_operand)


State 84

   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR
   80 arhimetic_expr: arhimetic_operand .  [SIGN_TIP, TRIVIAL_TIP, TIP_SIGN, ID, EVAL, CONST, PRINT, RETURN, IF, ELSE, WHILE, DO, FOR, ',', ';', ')', '}', '"']
   81               | arhimetic_operand . ADD arhimetic_operand
   82               | arhimetic_operand . MIN arhimetic_operand
   83               | arhimetic_operand . MUL arhimetic_operand
   84               | arhimetic_operand . DIV arhimetic_operand
   85               | arhimetic_operand . MOD arhimetic_operand

    MUL   shift, and go to state 131
    DIV   shift, and go to state 132
    MOD   shift, and go to state 133
    ADD   shift, and go to state 134
    MIN   shift, and go to state 135
    INCR  shift, and go to state 136
    DECR  shift, and go to state 137

    $default  reduce using rule 80 (arhimetic_expr)


State 85

   86 expr: arhimetic_expr .

    $default  reduce using rule 86 (expr)


State 86

   10 str_exp_val: expr .

    $default  reduce using rule 10 (str_exp_val)


State 87

   97 function_head: data_type ID '(' ')' .

    $default  reduce using rule 97 (function_head)


State 88

   88 no_parameter: data_type . ID
   89 op_parameter: data_type . ID ASSIGN const_value

    ID  shift, and go to state 138


State 89

   90 no_parameter_list: no_parameter .  [')']
   91                  | no_parameter . ',' no_parameter_list

    ','  shift, and go to state 139

    $default  reduce using rule 90 (no_parameter_list)


State 90

   92 op_parameter_list: op_parameter . ',' op_parameter_list
   94                  | op_parameter .  [')']

    ','  shift, and go to state 140

    $default  reduce using rule 94 (op_parameter_list)


State 91

   93 op_parameter_list: no_parameter_list .

    $default  reduce using rule 93 (op_parameter_list)


State 92

   95 parameter_list: op_parameter_list .

    $default  reduce using rule 95 (parameter_list)


State 93

   96 function_head: data_type ID '(' parameter_list . ')'

    ')'  shift, and go to state 141


State 94

   12 variable_idendifier: variable_idendifier ',' ID .

    $default  reduce using rule 12 (variable_idendifier)


State 95

   32 ref_val: ID PMEM . ID

    ID  shift, and go to state 142


State 96

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   34 caller_params: . expr
   35              | . expr ',' caller_params
   36 function_call: . ID '(' caller_params ')' ';'
   36              | ID '(' . caller_params ')' ';'
   37              | . ID '(' ')' ';'
   37              | ID '(' . ')' ';'
   47 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand
   86 expr: . arhimetic_expr
   87     | . calc_statement

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    CALC        shift, and go to state 74
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77
    ')'         shift, and go to state 143

    const_numeric_value  go to state 78
    ref_val              go to state 80
    caller_params        go to state 144
    function_call        go to state 81
    calc_statement       go to state 82
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 85
    expr                 go to state 145


State 97

   33 ref_val: ID '.' . ID

    ID  shift, and go to state 146


State 98

   46 eval_statement: EVAL '(' . '"' arhimetic_expr '"' ')' ';'

    '"'  shift, and go to state 147


State 99

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   28 print_statement: PRINT '(' . caller_params ')' ';'
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   34 caller_params: . expr
   35              | . expr ',' caller_params
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   47 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand
   86 expr: . arhimetic_expr
   87     | . calc_statement

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    CALC        shift, and go to state 74
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    caller_params        go to state 148
    function_call        go to state 81
    calc_statement       go to state 82
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 85
    expr                 go to state 145


State 100

   27 return_statement: RETURN expr .

    $default  reduce using rule 27 (return_statement)


State 101

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   50 stop_cond: . lo_expr
   51          | . %empty  [')']
   54 condition: '(' . stop_cond ')'
   61 lo_expr: . NOT lo_expr
   62        | . lo_expr AND lo_expr
   63        | . lo_expr OR lo_expr
   64        | . arhimetic_operand GREATER arhimetic_operand
   65        | . arhimetic_operand LOWER arhimetic_operand
   66        | . arhimetic_operand EQUAL arhimetic_operand
   67        | . arhimetic_operand NOT_EQ arhimetic_operand
   68        | . arhimetic_operand LOWER_EQ arhimetic_operand
   69        | . arhimetic_operand GREATER_EQ arhimetic_operand
   70        | . '(' lo_expr ')'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    NOT         shift, and go to state 149
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 150

    $default  reduce using rule 51 (stop_cond)

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    stop_cond            go to state 151
    lo_expr              go to state 152
    numeric_val          go to state 83
    arhimetic_operand    go to state 153


State 102

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   17 statement: . variable_dec
   18          | . function_call
   19          | . if_statement
   20          | . for_statement
   21          | . while_statement
   22          | . dowhile_statement
   23          | . asign_statement
   24          | . eval_statement
   25          | . return_statement
   26          | . print_statement
   27 return_statement: . RETURN expr
   28 print_statement: . PRINT '(' caller_params ')' ';'
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   38 block: . '{' statement_list '}'
   39      | . statement
   40 asign_statement: . ref_val ASSIGN expr ';'
   41                | . ref_val MUL_ASSIGN expr ';'
   42                | . ref_val MOD_ASSIGN expr ';'
   43                | . ref_val ADD_ASSIGN expr ';'
   44                | . ref_val MIN_ASSIGN expr ';'
   45                | . ref_val DIV_ASSIGN expr ';'
   46 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   55 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   56 dowhile_statement: . DO block WHILE condition ';'
   57 while_statement: . WHILE condition block
   58 if_head: . IF condition block
   58        | IF condition . block
   60 if_statement: . if_head if_else

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 38
    EVAL         shift, and go to state 39
    CONST        shift, and go to state 4
    PRINT        shift, and go to state 40
    RETURN       shift, and go to state 41
    IF           shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45
    '{'          shift, and go to state 104

    data_type          go to state 46
    variable_dec       go to state 47
    statement          go to state 105
    return_statement   go to state 49
    print_statement    go to state 50
    ref_val            go to state 52
    function_call      go to state 53
    block              go to state 154
    asign_statement    go to state 54
    eval_statement     go to state 55
    for_statement      go to state 56
    dowhile_statement  go to state 57
    while_statement    go to state 58
    if_head            go to state 59
    if_statement       go to state 60


State 103

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   17 statement: . variable_dec
   18          | . function_call
   19          | . if_statement
   20          | . for_statement
   21          | . while_statement
   22          | . dowhile_statement
   23          | . asign_statement
   24          | . eval_statement
   25          | . return_statement
   26          | . print_statement
   27 return_statement: . RETURN expr
   28 print_statement: . PRINT '(' caller_params ')' ';'
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   38 block: . '{' statement_list '}'
   39      | . statement
   40 asign_statement: . ref_val ASSIGN expr ';'
   41                | . ref_val MUL_ASSIGN expr ';'
   42                | . ref_val MOD_ASSIGN expr ';'
   43                | . ref_val ADD_ASSIGN expr ';'
   44                | . ref_val MIN_ASSIGN expr ';'
   45                | . ref_val DIV_ASSIGN expr ';'
   46 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   55 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   56 dowhile_statement: . DO block WHILE condition ';'
   57 while_statement: . WHILE condition block
   57                | WHILE condition . block
   58 if_head: . IF condition block
   60 if_statement: . if_head if_else

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 38
    EVAL         shift, and go to state 39
    CONST        shift, and go to state 4
    PRINT        shift, and go to state 40
    RETURN       shift, and go to state 41
    IF           shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45
    '{'          shift, and go to state 104

    data_type          go to state 46
    variable_dec       go to state 47
    statement          go to state 105
    return_statement   go to state 49
    print_statement    go to state 50
    ref_val            go to state 52
    function_call      go to state 53
    block              go to state 155
    asign_statement    go to state 54
    eval_statement     go to state 55
    for_statement      go to state 56
    dowhile_statement  go to state 57
    while_statement    go to state 58
    if_head            go to state 59
    if_statement       go to state 60


State 104

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   17 statement: . variable_dec
   18          | . function_call
   19          | . if_statement
   20          | . for_statement
   21          | . while_statement
   22          | . dowhile_statement
   23          | . asign_statement
   24          | . eval_statement
   25          | . return_statement
   26          | . print_statement
   27 return_statement: . RETURN expr
   28 print_statement: . PRINT '(' caller_params ')' ';'
   29 statement_list: . statement
   30               | . statement_list statement
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   38 block: '{' . statement_list '}'
   40 asign_statement: . ref_val ASSIGN expr ';'
   41                | . ref_val MUL_ASSIGN expr ';'
   42                | . ref_val MOD_ASSIGN expr ';'
   43                | . ref_val ADD_ASSIGN expr ';'
   44                | . ref_val MIN_ASSIGN expr ';'
   45                | . ref_val DIV_ASSIGN expr ';'
   46 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   55 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   56 dowhile_statement: . DO block WHILE condition ';'
   57 while_statement: . WHILE condition block
   58 if_head: . IF condition block
   60 if_statement: . if_head if_else

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 38
    EVAL         shift, and go to state 39
    CONST        shift, and go to state 4
    PRINT        shift, and go to state 40
    RETURN       shift, and go to state 41
    IF           shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45

    data_type          go to state 46
    variable_dec       go to state 47
    statement          go to state 48
    return_statement   go to state 49
    print_statement    go to state 50
    statement_list     go to state 156
    ref_val            go to state 52
    function_call      go to state 53
    asign_statement    go to state 54
    eval_statement     go to state 55
    for_statement      go to state 56
    dowhile_statement  go to state 57
    while_statement    go to state 58
    if_head            go to state 59
    if_statement       go to state 60


State 105

   39 block: statement .

    $default  reduce using rule 39 (block)


State 106

   56 dowhile_statement: DO block . WHILE condition ';'

    WHILE  shift, and go to state 157


State 107

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   17 statement: . variable_dec
   18          | . function_call
   19          | . if_statement
   20          | . for_statement
   21          | . while_statement
   22          | . dowhile_statement
   23          | . asign_statement
   24          | . eval_statement
   25          | . return_statement
   26          | . print_statement
   27 return_statement: . RETURN expr
   28 print_statement: . PRINT '(' caller_params ')' ';'
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   40 asign_statement: . ref_val ASSIGN expr ';'
   41                | . ref_val MUL_ASSIGN expr ';'
   42                | . ref_val MOD_ASSIGN expr ';'
   43                | . ref_val ADD_ASSIGN expr ';'
   44                | . ref_val MIN_ASSIGN expr ';'
   45                | . ref_val DIV_ASSIGN expr ';'
   46 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   48 loop_init: . statement
   49          | . %empty  [';']
   55 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   55              | FOR '(' . loop_init ';' stop_cond ';' loop_step ')' block
   56 dowhile_statement: . DO block WHILE condition ';'
   57 while_statement: . WHILE condition block
   58 if_head: . IF condition block
   60 if_statement: . if_head if_else

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 38
    EVAL         shift, and go to state 39
    CONST        shift, and go to state 4
    PRINT        shift, and go to state 40
    RETURN       shift, and go to state 41
    IF           shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45

    $default  reduce using rule 49 (loop_init)

    data_type          go to state 46
    variable_dec       go to state 47
    statement          go to state 158
    return_statement   go to state 49
    print_statement    go to state 50
    ref_val            go to state 52
    function_call      go to state 53
    asign_statement    go to state 54
    eval_statement     go to state 55
    loop_init          go to state 159
    for_statement      go to state 56
    dowhile_statement  go to state 57
    while_statement    go to state 58
    if_head            go to state 59
    if_statement       go to state 60


State 108

   11 variable_idendifier: ID .  [',', ';']
   15 variable_dec: data_type ID . ASSIGN str_exp_val ';'

    ASSIGN  shift, and go to state 34

    $default  reduce using rule 11 (variable_idendifier)


State 109

   99 function_def: function_head '{' statement_list '}' . ';'

    ';'  shift, and go to state 160


State 110

   30 statement_list: statement_list statement .

    $default  reduce using rule 30 (statement_list)


State 111

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   40 asign_statement: ref_val ASSIGN . expr ';'
   47 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand
   86 expr: . arhimetic_expr
   87     | . calc_statement

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    CALC        shift, and go to state 74
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    calc_statement       go to state 82
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 85
    expr                 go to state 161


State 112

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   41 asign_statement: ref_val MUL_ASSIGN . expr ';'
   47 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand
   86 expr: . arhimetic_expr
   87     | . calc_statement

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    CALC        shift, and go to state 74
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    calc_statement       go to state 82
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 85
    expr                 go to state 162


State 113

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   42 asign_statement: ref_val MOD_ASSIGN . expr ';'
   47 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand
   86 expr: . arhimetic_expr
   87     | . calc_statement

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    CALC        shift, and go to state 74
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    calc_statement       go to state 82
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 85
    expr                 go to state 163


State 114

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   43 asign_statement: ref_val ADD_ASSIGN . expr ';'
   47 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand
   86 expr: . arhimetic_expr
   87     | . calc_statement

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    CALC        shift, and go to state 74
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    calc_statement       go to state 82
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 85
    expr                 go to state 164


State 115

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   44 asign_statement: ref_val MIN_ASSIGN . expr ';'
   47 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand
   86 expr: . arhimetic_expr
   87     | . calc_statement

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    CALC        shift, and go to state 74
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    calc_statement       go to state 82
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 85
    expr                 go to state 165


State 116

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   45 asign_statement: ref_val DIV_ASSIGN . expr ';'
   47 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand
   86 expr: . arhimetic_expr
   87     | . calc_statement

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    CALC        shift, and go to state 74
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    calc_statement       go to state 82
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 85
    expr                 go to state 166


State 117

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   17 statement: . variable_dec
   18          | . function_call
   19          | . if_statement
   20          | . for_statement
   21          | . while_statement
   22          | . dowhile_statement
   23          | . asign_statement
   24          | . eval_statement
   25          | . return_statement
   26          | . print_statement
   27 return_statement: . RETURN expr
   28 print_statement: . PRINT '(' caller_params ')' ';'
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   38 block: . '{' statement_list '}'
   39      | . statement
   40 asign_statement: . ref_val ASSIGN expr ';'
   41                | . ref_val MUL_ASSIGN expr ';'
   42                | . ref_val MOD_ASSIGN expr ';'
   43                | . ref_val ADD_ASSIGN expr ';'
   44                | . ref_val MIN_ASSIGN expr ';'
   45                | . ref_val DIV_ASSIGN expr ';'
   46 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   55 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   56 dowhile_statement: . DO block WHILE condition ';'
   57 while_statement: . WHILE condition block
   58 if_head: . IF condition block
   59 if_else: ELSE . block
   60 if_statement: . if_head if_else

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 38
    EVAL         shift, and go to state 39
    CONST        shift, and go to state 4
    PRINT        shift, and go to state 40
    RETURN       shift, and go to state 41
    IF           shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45
    '{'          shift, and go to state 104

    data_type          go to state 46
    variable_dec       go to state 47
    statement          go to state 105
    return_statement   go to state 49
    print_statement    go to state 50
    ref_val            go to state 52
    function_call      go to state 53
    block              go to state 167
    asign_statement    go to state 54
    eval_statement     go to state 55
    for_statement      go to state 56
    dowhile_statement  go to state 57
    while_statement    go to state 58
    if_head            go to state 59
    if_statement       go to state 60


State 118

   60 if_statement: if_head if_else .

    $default  reduce using rule 60 (if_statement)


State 119

   16 variable_dec: CONST data_type ID ASSIGN str_exp_val . ';'

    ';'  shift, and go to state 168


State 120

  104 member_declarations: STATIC variable_dec .

    $default  reduce using rule 104 (member_declarations)


State 121

  106 member_declarations: STATIC function_dec .

    $default  reduce using rule 106 (member_declarations)


State 122

  102 acces_modifier: ACCESMODIF ':' .

    $default  reduce using rule 102 (acces_modifier)


State 123

  108 struct_member: acces_modifier member_declarations .

    $default  reduce using rule 108 (struct_member)


State 124

   11 variable_idendifier: . ID
   12                    | . variable_idendifier ',' ID
  112 struct_head: ID '{' struct_body '}' .  [';']
  113            | ID '{' struct_body '}' . variable_idendifier

    ID  shift, and go to state 169

    $default  reduce using rule 112 (struct_head)

    variable_idendifier  go to state 170


State 125

  110 struct_body: struct_body struct_member .

    $default  reduce using rule 110 (struct_body)


State 126

   47 calc_statement: CALC '(' . '"' arhimetic_expr '"' ')' ';'

    '"'  shift, and go to state 171


State 127

   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR
   77                  | INCR arhimetic_operand .  [SIGN_TIP, TRIVIAL_TIP, TIP_SIGN, ID, EQUAL, NOT_EQ, LOWER_EQ, GREATER_EQ, GREATER, LOWER, EVAL, CONST, PRINT, RETURN, IF, ELSE, WHILE, DO, FOR, AND, OR, MUL, DIV, MOD, ADD, MIN, INCR, DECR, ',', ';', ')', '}', '"']

    $default  reduce using rule 77 (arhimetic_operand)

    Conflict between rule 77 and token INCR resolved as reduce (%left INCR).
    Conflict between rule 77 and token DECR resolved as reduce (%left DECR).


State 128

   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR
   78                  | DECR arhimetic_operand .  [SIGN_TIP, TRIVIAL_TIP, TIP_SIGN, ID, EQUAL, NOT_EQ, LOWER_EQ, GREATER_EQ, GREATER, LOWER, EVAL, CONST, PRINT, RETURN, IF, ELSE, WHILE, DO, FOR, AND, OR, MUL, DIV, MOD, ADD, MIN, INCR, DECR, ',', ';', ')', '}', '"']

    $default  reduce using rule 78 (arhimetic_operand)

    Conflict between rule 78 and token INCR resolved as reduce (%left INCR).
    Conflict between rule 78 and token DECR resolved as reduce (%left DECR).


State 129

   79 arhimetic_operand: '(' arhimetic_expr . ')'

    ')'  shift, and go to state 172


State 130

   15 variable_dec: data_type ID ASSIGN str_exp_val ';' .

    $default  reduce using rule 15 (variable_dec)


State 131

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   83 arhimetic_expr: arhimetic_operand MUL . arhimetic_operand

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 173


State 132

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   84 arhimetic_expr: arhimetic_operand DIV . arhimetic_operand

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 174


State 133

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   85 arhimetic_expr: arhimetic_operand MOD . arhimetic_operand

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 175


State 134

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   81 arhimetic_expr: arhimetic_operand ADD . arhimetic_operand

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 176


State 135

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   82 arhimetic_expr: arhimetic_operand MIN . arhimetic_operand

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 177


State 136

   75 arhimetic_operand: arhimetic_operand INCR .

    $default  reduce using rule 75 (arhimetic_operand)


State 137

   76 arhimetic_operand: arhimetic_operand DECR .

    $default  reduce using rule 76 (arhimetic_operand)


State 138

   88 no_parameter: data_type ID .  [',', ')']
   89 op_parameter: data_type ID . ASSIGN const_value

    ASSIGN  shift, and go to state 178

    $default  reduce using rule 88 (no_parameter)


State 139

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   88 no_parameter: . data_type ID
   90 no_parameter_list: . no_parameter
   91                  | . no_parameter ',' no_parameter_list
   91                  | no_parameter ',' . no_parameter_list

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3

    data_type          go to state 179
    no_parameter       go to state 89
    no_parameter_list  go to state 180


State 140

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   88 no_parameter: . data_type ID
   89 op_parameter: . data_type ID ASSIGN const_value
   90 no_parameter_list: . no_parameter
   91                  | . no_parameter ',' no_parameter_list
   92 op_parameter_list: . op_parameter ',' op_parameter_list
   92                  | op_parameter ',' . op_parameter_list
   93                  | . no_parameter_list
   94                  | . op_parameter

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3

    data_type          go to state 88
    no_parameter       go to state 89
    op_parameter       go to state 90
    no_parameter_list  go to state 91
    op_parameter_list  go to state 181


State 141

   96 function_head: data_type ID '(' parameter_list ')' .

    $default  reduce using rule 96 (function_head)


State 142

   32 ref_val: ID PMEM ID .

    $default  reduce using rule 32 (ref_val)


State 143

   37 function_call: ID '(' ')' . ';'

    ';'  shift, and go to state 182


State 144

   36 function_call: ID '(' caller_params . ')' ';'

    ')'  shift, and go to state 183


State 145

   34 caller_params: expr .  [')']
   35              | expr . ',' caller_params

    ','  shift, and go to state 184

    $default  reduce using rule 34 (caller_params)


State 146

   33 ref_val: ID '.' ID .

    $default  reduce using rule 33 (ref_val)


State 147

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   46 eval_statement: EVAL '(' '"' . arhimetic_expr '"' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 185


State 148

   28 print_statement: PRINT '(' caller_params . ')' ';'

    ')'  shift, and go to state 186


State 149

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   61 lo_expr: . NOT lo_expr
   61        | NOT . lo_expr
   62        | . lo_expr AND lo_expr
   63        | . lo_expr OR lo_expr
   64        | . arhimetic_operand GREATER arhimetic_operand
   65        | . arhimetic_operand LOWER arhimetic_operand
   66        | . arhimetic_operand EQUAL arhimetic_operand
   67        | . arhimetic_operand NOT_EQ arhimetic_operand
   68        | . arhimetic_operand LOWER_EQ arhimetic_operand
   69        | . arhimetic_operand GREATER_EQ arhimetic_operand
   70        | . '(' lo_expr ')'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    NOT         shift, and go to state 149
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 150

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    lo_expr              go to state 187
    numeric_val          go to state 83
    arhimetic_operand    go to state 153


State 150

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   61 lo_expr: . NOT lo_expr
   62        | . lo_expr AND lo_expr
   63        | . lo_expr OR lo_expr
   64        | . arhimetic_operand GREATER arhimetic_operand
   65        | . arhimetic_operand LOWER arhimetic_operand
   66        | . arhimetic_operand EQUAL arhimetic_operand
   67        | . arhimetic_operand NOT_EQ arhimetic_operand
   68        | . arhimetic_operand LOWER_EQ arhimetic_operand
   69        | . arhimetic_operand GREATER_EQ arhimetic_operand
   70        | . '(' lo_expr ')'
   70        | '(' . lo_expr ')'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   79                  | '(' . arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    NOT         shift, and go to state 149
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 150

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    lo_expr              go to state 188
    numeric_val          go to state 83
    arhimetic_operand    go to state 189
    arhimetic_expr       go to state 129


State 151

   54 condition: '(' stop_cond . ')'

    ')'  shift, and go to state 190


State 152

   50 stop_cond: lo_expr .  [';', ')']
   62 lo_expr: lo_expr . AND lo_expr
   63        | lo_expr . OR lo_expr

    AND  shift, and go to state 191
    OR   shift, and go to state 192

    $default  reduce using rule 50 (stop_cond)


State 153

   64 lo_expr: arhimetic_operand . GREATER arhimetic_operand
   65        | arhimetic_operand . LOWER arhimetic_operand
   66        | arhimetic_operand . EQUAL arhimetic_operand
   67        | arhimetic_operand . NOT_EQ arhimetic_operand
   68        | arhimetic_operand . LOWER_EQ arhimetic_operand
   69        | arhimetic_operand . GREATER_EQ arhimetic_operand
   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR

    EQUAL       shift, and go to state 193
    NOT_EQ      shift, and go to state 194
    LOWER_EQ    shift, and go to state 195
    GREATER_EQ  shift, and go to state 196
    GREATER     shift, and go to state 197
    LOWER       shift, and go to state 198
    INCR        shift, and go to state 136
    DECR        shift, and go to state 137


State 154

   58 if_head: IF condition block .

    $default  reduce using rule 58 (if_head)


State 155

   57 while_statement: WHILE condition block .

    $default  reduce using rule 57 (while_statement)


State 156

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   17 statement: . variable_dec
   18          | . function_call
   19          | . if_statement
   20          | . for_statement
   21          | . while_statement
   22          | . dowhile_statement
   23          | . asign_statement
   24          | . eval_statement
   25          | . return_statement
   26          | . print_statement
   27 return_statement: . RETURN expr
   28 print_statement: . PRINT '(' caller_params ')' ';'
   30 statement_list: statement_list . statement
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   38 block: '{' statement_list . '}'
   40 asign_statement: . ref_val ASSIGN expr ';'
   41                | . ref_val MUL_ASSIGN expr ';'
   42                | . ref_val MOD_ASSIGN expr ';'
   43                | . ref_val ADD_ASSIGN expr ';'
   44                | . ref_val MIN_ASSIGN expr ';'
   45                | . ref_val DIV_ASSIGN expr ';'
   46 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   55 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   56 dowhile_statement: . DO block WHILE condition ';'
   57 while_statement: . WHILE condition block
   58 if_head: . IF condition block
   60 if_statement: . if_head if_else

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 38
    EVAL         shift, and go to state 39
    CONST        shift, and go to state 4
    PRINT        shift, and go to state 40
    RETURN       shift, and go to state 41
    IF           shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45
    '}'          shift, and go to state 199

    data_type          go to state 46
    variable_dec       go to state 47
    statement          go to state 110
    return_statement   go to state 49
    print_statement    go to state 50
    ref_val            go to state 52
    function_call      go to state 53
    asign_statement    go to state 54
    eval_statement     go to state 55
    for_statement      go to state 56
    dowhile_statement  go to state 57
    while_statement    go to state 58
    if_head            go to state 59
    if_statement       go to state 60


State 157

   54 condition: . '(' stop_cond ')'
   56 dowhile_statement: DO block WHILE . condition ';'

    '('  shift, and go to state 101

    condition  go to state 200


State 158

   48 loop_init: statement .

    $default  reduce using rule 48 (loop_init)


State 159

   55 for_statement: FOR '(' loop_init . ';' stop_cond ';' loop_step ')' block

    ';'  shift, and go to state 201


State 160

   99 function_def: function_head '{' statement_list '}' ';' .

    $default  reduce using rule 99 (function_def)


State 161

   40 asign_statement: ref_val ASSIGN expr . ';'

    ';'  shift, and go to state 202


State 162

   41 asign_statement: ref_val MUL_ASSIGN expr . ';'

    ';'  shift, and go to state 203


State 163

   42 asign_statement: ref_val MOD_ASSIGN expr . ';'

    ';'  shift, and go to state 204


State 164

   43 asign_statement: ref_val ADD_ASSIGN expr . ';'

    ';'  shift, and go to state 205


State 165

   44 asign_statement: ref_val MIN_ASSIGN expr . ';'

    ';'  shift, and go to state 206


State 166

   45 asign_statement: ref_val DIV_ASSIGN expr . ';'

    ';'  shift, and go to state 207


State 167

   59 if_else: ELSE block .

    $default  reduce using rule 59 (if_else)


State 168

   16 variable_dec: CONST data_type ID ASSIGN str_exp_val ';' .

    $default  reduce using rule 16 (variable_dec)


State 169

   11 variable_idendifier: ID .

    $default  reduce using rule 11 (variable_idendifier)


State 170

   12 variable_idendifier: variable_idendifier . ',' ID
  113 struct_head: ID '{' struct_body '}' variable_idendifier .  [';']

    ','  shift, and go to state 36

    $default  reduce using rule 113 (struct_head)


State 171

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   47 calc_statement: CALC '(' '"' . arhimetic_expr '"' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 208


State 172

   79 arhimetic_operand: '(' arhimetic_expr ')' .

    $default  reduce using rule 79 (arhimetic_operand)


State 173

   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR
   83 arhimetic_expr: arhimetic_operand MUL arhimetic_operand .  [SIGN_TIP, TRIVIAL_TIP, TIP_SIGN, ID, EVAL, CONST, PRINT, RETURN, IF, ELSE, WHILE, DO, FOR, ',', ';', ')', '}', '"']

    INCR  shift, and go to state 136
    DECR  shift, and go to state 137

    $default  reduce using rule 83 (arhimetic_expr)


State 174

   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR
   84 arhimetic_expr: arhimetic_operand DIV arhimetic_operand .  [SIGN_TIP, TRIVIAL_TIP, TIP_SIGN, ID, EVAL, CONST, PRINT, RETURN, IF, ELSE, WHILE, DO, FOR, ',', ';', ')', '}', '"']

    INCR  shift, and go to state 136
    DECR  shift, and go to state 137

    $default  reduce using rule 84 (arhimetic_expr)


State 175

   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR
   85 arhimetic_expr: arhimetic_operand MOD arhimetic_operand .  [SIGN_TIP, TRIVIAL_TIP, TIP_SIGN, ID, EVAL, CONST, PRINT, RETURN, IF, ELSE, WHILE, DO, FOR, ',', ';', ')', '}', '"']

    INCR  shift, and go to state 136
    DECR  shift, and go to state 137

    $default  reduce using rule 85 (arhimetic_expr)


State 176

   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR
   81 arhimetic_expr: arhimetic_operand ADD arhimetic_operand .  [SIGN_TIP, TRIVIAL_TIP, TIP_SIGN, ID, EVAL, CONST, PRINT, RETURN, IF, ELSE, WHILE, DO, FOR, ',', ';', ')', '}', '"']

    INCR  shift, and go to state 136
    DECR  shift, and go to state 137

    $default  reduce using rule 81 (arhimetic_expr)


State 177

   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR
   82 arhimetic_expr: arhimetic_operand MIN arhimetic_operand .  [SIGN_TIP, TRIVIAL_TIP, TIP_SIGN, ID, EVAL, CONST, PRINT, RETURN, IF, ELSE, WHILE, DO, FOR, ',', ';', ')', '}', '"']

    INCR  shift, and go to state 136
    DECR  shift, and go to state 137

    $default  reduce using rule 82 (arhimetic_expr)


State 178

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
    6 const_string_value: . CHAR_VAL
    7                   | . STRING_VAL
    8 const_value: . const_string_value
    9            | . const_numeric_value
   89 op_parameter: data_type ID ASSIGN . const_value

    CHAR_VAL    shift, and go to state 209
    STRING_VAL  shift, and go to state 210
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73

    const_numeric_value  go to state 211
    const_string_value   go to state 212
    const_value          go to state 213


State 179

   88 no_parameter: data_type . ID

    ID  shift, and go to state 214


State 180

   91 no_parameter_list: no_parameter ',' no_parameter_list .

    $default  reduce using rule 91 (no_parameter_list)


State 181

   92 op_parameter_list: op_parameter ',' op_parameter_list .

    $default  reduce using rule 92 (op_parameter_list)


State 182

   37 function_call: ID '(' ')' ';' .

    $default  reduce using rule 37 (function_call)


State 183

   36 function_call: ID '(' caller_params ')' . ';'

    ';'  shift, and go to state 215


State 184

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   34 caller_params: . expr
   35              | . expr ',' caller_params
   35              | expr ',' . caller_params
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   47 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand
   86 expr: . arhimetic_expr
   87     | . calc_statement

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    CALC        shift, and go to state 74
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    caller_params        go to state 216
    function_call        go to state 81
    calc_statement       go to state 82
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 85
    expr                 go to state 145


State 185

   46 eval_statement: EVAL '(' '"' arhimetic_expr . '"' ')' ';'

    '"'  shift, and go to state 217


State 186

   28 print_statement: PRINT '(' caller_params ')' . ';'

    ';'  shift, and go to state 218


State 187

   61 lo_expr: NOT lo_expr .  [';', ')']
   62        | lo_expr . AND lo_expr
   63        | lo_expr . OR lo_expr

    AND  shift, and go to state 191
    OR   shift, and go to state 192

    $default  reduce using rule 61 (lo_expr)

    Conflict between rule 61 and token AND resolved as shift (NOT < AND).
    Conflict between rule 61 and token OR resolved as shift (NOT < OR).


State 188

   62 lo_expr: lo_expr . AND lo_expr
   63        | lo_expr . OR lo_expr
   70        | '(' lo_expr . ')'

    AND  shift, and go to state 191
    OR   shift, and go to state 192
    ')'  shift, and go to state 219


State 189

   64 lo_expr: arhimetic_operand . GREATER arhimetic_operand
   65        | arhimetic_operand . LOWER arhimetic_operand
   66        | arhimetic_operand . EQUAL arhimetic_operand
   67        | arhimetic_operand . NOT_EQ arhimetic_operand
   68        | arhimetic_operand . LOWER_EQ arhimetic_operand
   69        | arhimetic_operand . GREATER_EQ arhimetic_operand
   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR
   80 arhimetic_expr: arhimetic_operand .  [')']
   81               | arhimetic_operand . ADD arhimetic_operand
   82               | arhimetic_operand . MIN arhimetic_operand
   83               | arhimetic_operand . MUL arhimetic_operand
   84               | arhimetic_operand . DIV arhimetic_operand
   85               | arhimetic_operand . MOD arhimetic_operand

    EQUAL       shift, and go to state 193
    NOT_EQ      shift, and go to state 194
    LOWER_EQ    shift, and go to state 195
    GREATER_EQ  shift, and go to state 196
    GREATER     shift, and go to state 197
    LOWER       shift, and go to state 198
    MUL         shift, and go to state 131
    DIV         shift, and go to state 132
    MOD         shift, and go to state 133
    ADD         shift, and go to state 134
    MIN         shift, and go to state 135
    INCR        shift, and go to state 136
    DECR        shift, and go to state 137

    $default  reduce using rule 80 (arhimetic_expr)


State 190

   54 condition: '(' stop_cond ')' .

    $default  reduce using rule 54 (condition)


State 191

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   61 lo_expr: . NOT lo_expr
   62        | . lo_expr AND lo_expr
   62        | lo_expr AND . lo_expr
   63        | . lo_expr OR lo_expr
   64        | . arhimetic_operand GREATER arhimetic_operand
   65        | . arhimetic_operand LOWER arhimetic_operand
   66        | . arhimetic_operand EQUAL arhimetic_operand
   67        | . arhimetic_operand NOT_EQ arhimetic_operand
   68        | . arhimetic_operand LOWER_EQ arhimetic_operand
   69        | . arhimetic_operand GREATER_EQ arhimetic_operand
   70        | . '(' lo_expr ')'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    NOT         shift, and go to state 149
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 150

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    lo_expr              go to state 220
    numeric_val          go to state 83
    arhimetic_operand    go to state 153


State 192

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   61 lo_expr: . NOT lo_expr
   62        | . lo_expr AND lo_expr
   63        | . lo_expr OR lo_expr
   63        | lo_expr OR . lo_expr
   64        | . arhimetic_operand GREATER arhimetic_operand
   65        | . arhimetic_operand LOWER arhimetic_operand
   66        | . arhimetic_operand EQUAL arhimetic_operand
   67        | . arhimetic_operand NOT_EQ arhimetic_operand
   68        | . arhimetic_operand LOWER_EQ arhimetic_operand
   69        | . arhimetic_operand GREATER_EQ arhimetic_operand
   70        | . '(' lo_expr ')'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    NOT         shift, and go to state 149
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 150

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    lo_expr              go to state 221
    numeric_val          go to state 83
    arhimetic_operand    go to state 153


State 193

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   66 lo_expr: arhimetic_operand EQUAL . arhimetic_operand
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 222


State 194

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   67 lo_expr: arhimetic_operand NOT_EQ . arhimetic_operand
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 223


State 195

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   68 lo_expr: arhimetic_operand LOWER_EQ . arhimetic_operand
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 224


State 196

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   69 lo_expr: arhimetic_operand GREATER_EQ . arhimetic_operand
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 225


State 197

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   64 lo_expr: arhimetic_operand GREATER . arhimetic_operand
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 226


State 198

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   65 lo_expr: arhimetic_operand LOWER . arhimetic_operand
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    numeric_val          go to state 83
    arhimetic_operand    go to state 227


State 199

   38 block: '{' statement_list '}' .

    $default  reduce using rule 38 (block)


State 200

   56 dowhile_statement: DO block WHILE condition . ';'

    ';'  shift, and go to state 228


State 201

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   50 stop_cond: . lo_expr
   51          | . %empty  [';']
   55 for_statement: FOR '(' loop_init ';' . stop_cond ';' loop_step ')' block
   61 lo_expr: . NOT lo_expr
   62        | . lo_expr AND lo_expr
   63        | . lo_expr OR lo_expr
   64        | . arhimetic_operand GREATER arhimetic_operand
   65        | . arhimetic_operand LOWER arhimetic_operand
   66        | . arhimetic_operand EQUAL arhimetic_operand
   67        | . arhimetic_operand NOT_EQ arhimetic_operand
   68        | . arhimetic_operand LOWER_EQ arhimetic_operand
   69        | . arhimetic_operand GREATER_EQ arhimetic_operand
   70        | . '(' lo_expr ')'
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    NOT         shift, and go to state 149
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 150

    $default  reduce using rule 51 (stop_cond)

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    stop_cond            go to state 229
    lo_expr              go to state 152
    numeric_val          go to state 83
    arhimetic_operand    go to state 153


State 202

   40 asign_statement: ref_val ASSIGN expr ';' .

    $default  reduce using rule 40 (asign_statement)


State 203

   41 asign_statement: ref_val MUL_ASSIGN expr ';' .

    $default  reduce using rule 41 (asign_statement)


State 204

   42 asign_statement: ref_val MOD_ASSIGN expr ';' .

    $default  reduce using rule 42 (asign_statement)


State 205

   43 asign_statement: ref_val ADD_ASSIGN expr ';' .

    $default  reduce using rule 43 (asign_statement)


State 206

   44 asign_statement: ref_val MIN_ASSIGN expr ';' .

    $default  reduce using rule 44 (asign_statement)


State 207

   45 asign_statement: ref_val DIV_ASSIGN expr ';' .

    $default  reduce using rule 45 (asign_statement)


State 208

   47 calc_statement: CALC '(' '"' arhimetic_expr . '"' ')' ';'

    '"'  shift, and go to state 230


State 209

    6 const_string_value: CHAR_VAL .

    $default  reduce using rule 6 (const_string_value)


State 210

    7 const_string_value: STRING_VAL .

    $default  reduce using rule 7 (const_string_value)


State 211

    9 const_value: const_numeric_value .

    $default  reduce using rule 9 (const_value)


State 212

    8 const_value: const_string_value .

    $default  reduce using rule 8 (const_value)


State 213

   89 op_parameter: data_type ID ASSIGN const_value .

    $default  reduce using rule 89 (op_parameter)


State 214

   88 no_parameter: data_type ID .

    $default  reduce using rule 88 (no_parameter)


State 215

   36 function_call: ID '(' caller_params ')' ';' .

    $default  reduce using rule 36 (function_call)


State 216

   35 caller_params: expr ',' caller_params .

    $default  reduce using rule 35 (caller_params)


State 217

   46 eval_statement: EVAL '(' '"' arhimetic_expr '"' . ')' ';'

    ')'  shift, and go to state 231


State 218

   28 print_statement: PRINT '(' caller_params ')' ';' .

    $default  reduce using rule 28 (print_statement)


State 219

   70 lo_expr: '(' lo_expr ')' .

    $default  reduce using rule 70 (lo_expr)


State 220

   62 lo_expr: lo_expr . AND lo_expr
   62        | lo_expr AND lo_expr .  [AND, ';', ')']
   63        | lo_expr . OR lo_expr

    OR  shift, and go to state 192

    $default  reduce using rule 62 (lo_expr)

    Conflict between rule 62 and token AND resolved as reduce (%left AND).
    Conflict between rule 62 and token OR resolved as shift (AND < OR).


State 221

   62 lo_expr: lo_expr . AND lo_expr
   63        | lo_expr . OR lo_expr
   63        | lo_expr OR lo_expr .  [AND, OR, ';', ')']

    $default  reduce using rule 63 (lo_expr)

    Conflict between rule 63 and token AND resolved as reduce (AND < OR).
    Conflict between rule 63 and token OR resolved as reduce (%left OR).


State 222

   66 lo_expr: arhimetic_operand EQUAL arhimetic_operand .  [AND, OR, ';', ')']
   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR

    INCR  shift, and go to state 136
    DECR  shift, and go to state 137

    $default  reduce using rule 66 (lo_expr)


State 223

   67 lo_expr: arhimetic_operand NOT_EQ arhimetic_operand .  [AND, OR, ';', ')']
   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR

    INCR  shift, and go to state 136
    DECR  shift, and go to state 137

    $default  reduce using rule 67 (lo_expr)


State 224

   68 lo_expr: arhimetic_operand LOWER_EQ arhimetic_operand .  [AND, OR, ';', ')']
   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR

    INCR  shift, and go to state 136
    DECR  shift, and go to state 137

    $default  reduce using rule 68 (lo_expr)


State 225

   69 lo_expr: arhimetic_operand GREATER_EQ arhimetic_operand .  [AND, OR, ';', ')']
   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR

    INCR  shift, and go to state 136
    DECR  shift, and go to state 137

    $default  reduce using rule 69 (lo_expr)


State 226

   64 lo_expr: arhimetic_operand GREATER arhimetic_operand .  [AND, OR, ';', ')']
   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR

    INCR  shift, and go to state 136
    DECR  shift, and go to state 137

    $default  reduce using rule 64 (lo_expr)


State 227

   65 lo_expr: arhimetic_operand LOWER arhimetic_operand .  [AND, OR, ';', ')']
   75 arhimetic_operand: arhimetic_operand . INCR
   76                  | arhimetic_operand . DECR

    INCR  shift, and go to state 136
    DECR  shift, and go to state 137

    $default  reduce using rule 65 (lo_expr)


State 228

   56 dowhile_statement: DO block WHILE condition ';' .

    $default  reduce using rule 56 (dowhile_statement)


State 229

   55 for_statement: FOR '(' loop_init ';' stop_cond . ';' loop_step ')' block

    ';'  shift, and go to state 232


State 230

   47 calc_statement: CALC '(' '"' arhimetic_expr '"' . ')' ';'

    ')'  shift, and go to state 233


State 231

   46 eval_statement: EVAL '(' '"' arhimetic_expr '"' ')' . ';'

    ';'  shift, and go to state 234


State 232

    4 const_numeric_value: . INT_VAL
    5                    | . DOUBLE_VAL
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   47 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   52 loop_step: . expr
   53          | . %empty  [')']
   55 for_statement: FOR '(' loop_init ';' stop_cond ';' . loop_step ')' block
   71 numeric_val: . ref_val
   72            | . function_call
   73            | . const_numeric_value
   74 arhimetic_operand: . numeric_val
   75                  | . arhimetic_operand INCR
   76                  | . arhimetic_operand DECR
   77                  | . INCR arhimetic_operand
   78                  | . DECR arhimetic_operand
   79                  | . '(' arhimetic_expr ')'
   80 arhimetic_expr: . arhimetic_operand
   81               | . arhimetic_operand ADD arhimetic_operand
   82               | . arhimetic_operand MIN arhimetic_operand
   83               | . arhimetic_operand MUL arhimetic_operand
   84               | . arhimetic_operand DIV arhimetic_operand
   85               | . arhimetic_operand MOD arhimetic_operand
   86 expr: . arhimetic_expr
   87     | . calc_statement

    ID          shift, and go to state 38
    INT_VAL     shift, and go to state 72
    DOUBLE_VAL  shift, and go to state 73
    CALC        shift, and go to state 74
    INCR        shift, and go to state 75
    DECR        shift, and go to state 76
    '('         shift, and go to state 77

    $default  reduce using rule 53 (loop_step)

    const_numeric_value  go to state 78
    ref_val              go to state 80
    function_call        go to state 81
    calc_statement       go to state 82
    loop_step            go to state 235
    numeric_val          go to state 83
    arhimetic_operand    go to state 84
    arhimetic_expr       go to state 85
    expr                 go to state 236


State 233

   47 calc_statement: CALC '(' '"' arhimetic_expr '"' ')' . ';'

    ';'  shift, and go to state 237


State 234

   46 eval_statement: EVAL '(' '"' arhimetic_expr '"' ')' ';' .

    $default  reduce using rule 46 (eval_statement)


State 235

   55 for_statement: FOR '(' loop_init ';' stop_cond ';' loop_step . ')' block

    ')'  shift, and go to state 238


State 236

   52 loop_step: expr .

    $default  reduce using rule 52 (loop_step)


State 237

   47 calc_statement: CALC '(' '"' arhimetic_expr '"' ')' ';' .

    $default  reduce using rule 47 (calc_statement)


State 238

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   13 variable_dec: . data_type variable_idendifier ';'
   14             | . CONST data_type variable_idendifier ';'
   15             | . data_type ID ASSIGN str_exp_val ';'
   16             | . CONST data_type ID ASSIGN str_exp_val ';'
   17 statement: . variable_dec
   18          | . function_call
   19          | . if_statement
   20          | . for_statement
   21          | . while_statement
   22          | . dowhile_statement
   23          | . asign_statement
   24          | . eval_statement
   25          | . return_statement
   26          | . print_statement
   27 return_statement: . RETURN expr
   28 print_statement: . PRINT '(' caller_params ')' ';'
   31 ref_val: . ID
   32        | . ID PMEM ID
   33        | . ID '.' ID
   36 function_call: . ID '(' caller_params ')' ';'
   37              | . ID '(' ')' ';'
   38 block: . '{' statement_list '}'
   39      | . statement
   40 asign_statement: . ref_val ASSIGN expr ';'
   41                | . ref_val MUL_ASSIGN expr ';'
   42                | . ref_val MOD_ASSIGN expr ';'
   43                | . ref_val ADD_ASSIGN expr ';'
   44                | . ref_val MIN_ASSIGN expr ';'
   45                | . ref_val DIV_ASSIGN expr ';'
   46 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   55 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   55              | FOR '(' loop_init ';' stop_cond ';' loop_step ')' . block
   56 dowhile_statement: . DO block WHILE condition ';'
   57 while_statement: . WHILE condition block
   58 if_head: . IF condition block
   60 if_statement: . if_head if_else

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 38
    EVAL         shift, and go to state 39
    CONST        shift, and go to state 4
    PRINT        shift, and go to state 40
    RETURN       shift, and go to state 41
    IF           shift, and go to state 42
    WHILE        shift, and go to state 43
    DO           shift, and go to state 44
    FOR          shift, and go to state 45
    '{'          shift, and go to state 104

    data_type          go to state 46
    variable_dec       go to state 47
    statement          go to state 105
    return_statement   go to state 49
    print_statement    go to state 50
    ref_val            go to state 52
    function_call      go to state 53
    block              go to state 239
    asign_statement    go to state 54
    eval_statement     go to state 55
    for_statement      go to state 56
    dowhile_statement  go to state 57
    while_statement    go to state 58
    if_head            go to state 59
    if_statement       go to state 60


State 239

   55 for_statement: FOR '(' loop_init ';' stop_cond ';' loop_step ')' block .

    $default  reduce using rule 55 (for_statement)
