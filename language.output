Terminals unused in grammar

    CONST
    PRINT
    RETURN


State 134 conflicts: 1 reduce/reduce
State 140 conflicts: 1 shift/reduce


Grammar

    0 $accept: begin $end

    1 data_type: TRIVIAL_TIP
    2          | SIGN_TIP
    3          | TIP_SIGN SIGN_TIP

    4 const_value: INT_VAL
    5            | CHAR_VAL
    6            | STRING_VAL
    7            | BOOL_VAL
    8            | DOUBLE_VAL

    9 variable_idendifier: ID
   10                    | variable_idendifier ',' ID

   11 variable_dec: data_type variable_idendifier ';'
   12             | data_type ID ASSIGN expr ';'

   13 statement: variable_dec
   14          | function_call
   15          | if_statement
   16          | for_statement
   17          | while_statement
   18          | dowhile_statement
   19          | asign_statement
   20          | eval_statement

   21 statement_list: statement
   22               | statement_list statement

   23 ref_val: ID
   24        | ID PMEM ID
   25        | ID '.' ID

   26 caller_params: expr
   27              | expr ',' caller_params

   28 function_call: ID '(' caller_params ')' ';'
   29              | ID '(' ')' ';'

   30 block: '{' statement_list '}'
   31      | statement

   32 asign_statement: ref_val ASSIGN expr ';'
   33                | ref_val MUL_ASSIGN expr ';'
   34                | ref_val MOD_ASSIGN expr ';'
   35                | ref_val ADD_ASSIGN expr ';'
   36                | ref_val MIN_ASSIGN expr ';'
   37                | ref_val DIV_ASSIGN expr ';'

   38 eval_statement: EVAL '(' '"' arhimetic_expr '"' ')' ';'

   39 calc_statement: CALC '(' '"' arhimetic_expr '"' ')' ';'

   40 loop_init: statement
   41          | %empty

   42 stop_cond: lo_expr
   43          | %empty

   44 loop_step: expr
   45          | %empty

   46 condition: '(' stop_cond ')'

   47 for_statement: FOR '(' loop_init ';' stop_cond ';' loop_step ')' block

   48 dowhile_statement: DO block WHILE condition ';'

   49 while_statement: WHILE condition block

   50 if_statement: IF condition block ELSE block
   51             | IF condition block

   52 lo_expr: NOT lo_expr
   53        | lo_expr AND lo_expr
   54        | lo_expr OR lo_expr
   55        | arhimetic_operand GREATER arhimetic_operand
   56        | arhimetic_operand LOWER arhimetic_operand
   57        | arhimetic_operand EQUAL arhimetic_operand
   58        | arhimetic_operand NOT_EQ arhimetic_operand
   59        | arhimetic_operand LOWER_EQ arhimetic_operand
   60        | arhimetic_operand GREATER_EQ arhimetic_operand
   61        | BOOL_VAL
   62        | '(' lo_expr ')'

   63 numeric_val: ref_val
   64            | function_call
   65            | const_value

   66 arhimetic_operand: numeric_val
   67                  | arhimetic_operand INCR
   68                  | arhimetic_operand DECR
   69                  | INCR arhimetic_operand
   70                  | DECR arhimetic_operand
   71                  | '(' arhimetic_expr ')'

   72 arhimetic_expr: arhimetic_operand
   73               | arhimetic_operand ADD arhimetic_operand
   74               | arhimetic_operand MIN arhimetic_operand
   75               | arhimetic_operand MUL arhimetic_operand
   76               | arhimetic_operand DIV arhimetic_operand
   77               | arhimetic_operand MOD arhimetic_operand

   78 expr: arhimetic_expr
   79     | calc_statement

   80 no_parameter: data_type ID

   81 op_parameter: data_type ID ASSIGN const_value

   82 no_parameter_list: no_parameter
   83                  | no_parameter ',' no_parameter_list

   84 op_parameter_list: op_parameter ',' op_parameter_list
   85                  | no_parameter_list
   86                  | op_parameter

   87 parameter_list: op_parameter_list

   88 function_head: data_type ID '(' parameter_list ')'
   89              | data_type ID '(' ')'

   90 function_dec: function_head ';'

   91 function_def: function_head '{' statement_list '}' ';'

   92 function: function_dec
   93         | function_def

   94 acces_modifier: ACCESMODIF ':'

   95 member_declarations: variable_dec
   96                    | STATIC variable_dec
   97                    | function_dec
   98                    | STATIC function_dec

   99 struct_member: member_declarations
  100              | acces_modifier member_declarations

  101 struct_body: struct_member
  102            | struct_body struct_member

  103 struct_head: ID
  104            | ID '{' struct_body '}'
  105            | ID '{' struct_body '}' variable_idendifier

  106 struct_dec: STRUCT struct_head ';'
  107           | CLASS struct_head ';'

  108 declarations: variable_dec declarations
  109             | struct_dec declarations
  110             | function declarations
  111             | function
  112             | struct_dec
  113             | variable_dec

  114 begin: declarations


Terminals, with rules where they appear

    $end (0) 0
    '"' (34) 38 39
    '(' (40) 28 29 38 39 46 47 62 71 88 89
    ')' (41) 28 29 38 39 46 47 62 71 88 89
    ',' (44) 10 27 83 84
    '.' (46) 25
    ':' (58) 94
    ';' (59) 11 12 28 29 32 33 34 35 36 37 38 39 47 48 90 91 106 107
    '{' (123) 30 91 104 105
    '}' (125) 30 91 104 105
    error (256)
    SIGN_TIP <str> (258) 2 3
    TRIVIAL_TIP <str> (259) 1
    TIP_SIGN (260) 3
    ID <str> (261) 9 10 12 23 24 25 28 29 80 81 88 89 103 104 105
    BOOL_VAL <num> (262) 7 61
    CHAR_VAL <str> (263) 5
    STRING_VAL <str> (264) 6
    INT_VAL <num> (265) 4
    DOUBLE_VAL <rnum> (266) 8
    ASSIGN (267) 12 32 81
    MUL_ASSIGN (268) 33
    MOD_ASSIGN (269) 34
    ADD_ASSIGN (270) 35
    MIN_ASSIGN (271) 36
    DIV_ASSIGN (272) 37
    EQUAL (273) 57
    NOT_EQ (274) 58
    LOWER_EQ (275) 59
    GREATER_EQ (276) 60
    GREATER (277) 55
    LOWER (278) 56
    EVAL (279) 38
    CALC (280) 39
    CONST (281)
    STATIC (282) 96 98
    PRINT (283)
    PMEM (284) 24
    RETURN (285)
    IF (286) 50 51
    ELSE (287) 50
    WHILE (288) 48 49
    DO (289) 48
    FOR (290) 47
    STRUCT (291) 106
    CLASS (292) 107
    ACCESMODIF (293) 94
    NOT (294) 52
    AND (295) 53
    OR (296) 54
    MUL (297) 75
    DIV (298) 76
    MOD (299) 77
    ADD (300) 73
    MIN (301) 74
    INCR (302) 67 69
    DECR (303) 68 70


Nonterminals, with rules where they appear

    $accept (58)
        on left: 0
    data_type (59)
        on left: 1 2 3
        on right: 11 12 80 81 88 89
    const_value <rnum> (60)
        on left: 4 5 6 7 8
        on right: 65 81
    variable_idendifier (61)
        on left: 9 10
        on right: 10 11 105
    variable_dec (62)
        on left: 11 12
        on right: 13 95 96 108 113
    statement (63)
        on left: 13 14 15 16 17 18 19 20
        on right: 21 22 31 40
    statement_list (64)
        on left: 21 22
        on right: 22 30 91
    ref_val <rnum> (65)
        on left: 23 24 25
        on right: 32 33 34 35 36 37 63
    caller_params (66)
        on left: 26 27
        on right: 27 28
    function_call <rnum> (67)
        on left: 28 29
        on right: 14 64
    block (68)
        on left: 30 31
        on right: 47 48 49 50 51
    asign_statement (69)
        on left: 32 33 34 35 36 37
        on right: 19
    eval_statement (70)
        on left: 38
        on right: 20
    calc_statement <rnum> (71)
        on left: 39
        on right: 79
    loop_init (72)
        on left: 40 41
        on right: 47
    stop_cond (73)
        on left: 42 43
        on right: 46 47
    loop_step (74)
        on left: 44 45
        on right: 47
    condition (75)
        on left: 46
        on right: 48 49 50 51
    for_statement (76)
        on left: 47
        on right: 16
    dowhile_statement (77)
        on left: 48
        on right: 18
    while_statement (78)
        on left: 49
        on right: 17
    if_statement (79)
        on left: 50 51
        on right: 15
    lo_expr <num> (80)
        on left: 52 53 54 55 56 57 58 59 60 61 62
        on right: 42 52 53 54 62
    numeric_val <rnum> (81)
        on left: 63 64 65
        on right: 66
    arhimetic_operand <rnum> (82)
        on left: 66 67 68 69 70 71
        on right: 55 56 57 58 59 60 67 68 69 70 72 73 74 75 76 77
    arhimetic_expr <rnum> (83)
        on left: 72 73 74 75 76 77
        on right: 38 39 71 78
    expr <rnum> (84)
        on left: 78 79
        on right: 12 26 27 32 33 34 35 36 37 44
    no_parameter (85)
        on left: 80
        on right: 82 83
    op_parameter (86)
        on left: 81
        on right: 84 86
    no_parameter_list (87)
        on left: 82 83
        on right: 83 85
    op_parameter_list (88)
        on left: 84 85 86
        on right: 84 87
    parameter_list (89)
        on left: 87
        on right: 88
    function_head (90)
        on left: 88 89
        on right: 90 91
    function_dec (91)
        on left: 90
        on right: 92 97 98
    function_def (92)
        on left: 91
        on right: 93
    function (93)
        on left: 92 93
        on right: 110 111
    acces_modifier (94)
        on left: 94
        on right: 100
    member_declarations (95)
        on left: 95 96 97 98
        on right: 99 100
    struct_member (96)
        on left: 99 100
        on right: 101 102
    struct_body (97)
        on left: 101 102
        on right: 102 104 105
    struct_head (98)
        on left: 103 104 105
        on right: 106 107
    struct_dec (99)
        on left: 106 107
        on right: 109 112
    declarations (100)
        on left: 108 109 110 111 112 113
        on right: 108 109 110 114
    begin (101)
        on left: 114
        on right: 0


State 0

    0 $accept: . begin $end
    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   88 function_head: . data_type ID '(' parameter_list ')'
   89              | . data_type ID '(' ')'
   90 function_dec: . function_head ';'
   91 function_def: . function_head '{' statement_list '}' ';'
   92 function: . function_dec
   93         | . function_def
  106 struct_dec: . STRUCT struct_head ';'
  107           | . CLASS struct_head ';'
  108 declarations: . variable_dec declarations
  109             | . struct_dec declarations
  110             | . function declarations
  111             | . function
  112             | . struct_dec
  113             | . variable_dec
  114 begin: . declarations

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    STRUCT       shift, and go to state 4
    CLASS        shift, and go to state 5

    data_type      go to state 6
    variable_dec   go to state 7
    function_head  go to state 8
    function_dec   go to state 9
    function_def   go to state 10
    function       go to state 11
    struct_dec     go to state 12
    declarations   go to state 13
    begin          go to state 14


State 1

    2 data_type: SIGN_TIP .

    $default  reduce using rule 2 (data_type)


State 2

    1 data_type: TRIVIAL_TIP .

    $default  reduce using rule 1 (data_type)


State 3

    3 data_type: TIP_SIGN . SIGN_TIP

    SIGN_TIP  shift, and go to state 15


State 4

  103 struct_head: . ID
  104            | . ID '{' struct_body '}'
  105            | . ID '{' struct_body '}' variable_idendifier
  106 struct_dec: STRUCT . struct_head ';'

    ID  shift, and go to state 16

    struct_head  go to state 17


State 5

  103 struct_head: . ID
  104            | . ID '{' struct_body '}'
  105            | . ID '{' struct_body '}' variable_idendifier
  107 struct_dec: CLASS . struct_head ';'

    ID  shift, and go to state 16

    struct_head  go to state 18


State 6

    9 variable_idendifier: . ID
   10                    | . variable_idendifier ',' ID
   11 variable_dec: data_type . variable_idendifier ';'
   12             | data_type . ID ASSIGN expr ';'
   88 function_head: data_type . ID '(' parameter_list ')'
   89              | data_type . ID '(' ')'

    ID  shift, and go to state 19

    variable_idendifier  go to state 20


State 7

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   88 function_head: . data_type ID '(' parameter_list ')'
   89              | . data_type ID '(' ')'
   90 function_dec: . function_head ';'
   91 function_def: . function_head '{' statement_list '}' ';'
   92 function: . function_dec
   93         | . function_def
  106 struct_dec: . STRUCT struct_head ';'
  107           | . CLASS struct_head ';'
  108 declarations: . variable_dec declarations
  108             | variable_dec . declarations
  109             | . struct_dec declarations
  110             | . function declarations
  111             | . function
  112             | . struct_dec
  113             | . variable_dec
  113             | variable_dec .  [$end]

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    STRUCT       shift, and go to state 4
    CLASS        shift, and go to state 5

    $default  reduce using rule 113 (declarations)

    data_type      go to state 6
    variable_dec   go to state 7
    function_head  go to state 8
    function_dec   go to state 9
    function_def   go to state 10
    function       go to state 11
    struct_dec     go to state 12
    declarations   go to state 21


State 8

   90 function_dec: function_head . ';'
   91 function_def: function_head . '{' statement_list '}' ';'

    ';'  shift, and go to state 22
    '{'  shift, and go to state 23


State 9

   92 function: function_dec .

    $default  reduce using rule 92 (function)


State 10

   93 function: function_def .

    $default  reduce using rule 93 (function)


State 11

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   88 function_head: . data_type ID '(' parameter_list ')'
   89              | . data_type ID '(' ')'
   90 function_dec: . function_head ';'
   91 function_def: . function_head '{' statement_list '}' ';'
   92 function: . function_dec
   93         | . function_def
  106 struct_dec: . STRUCT struct_head ';'
  107           | . CLASS struct_head ';'
  108 declarations: . variable_dec declarations
  109             | . struct_dec declarations
  110             | . function declarations
  110             | function . declarations
  111             | . function
  111             | function .  [$end]
  112             | . struct_dec
  113             | . variable_dec

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    STRUCT       shift, and go to state 4
    CLASS        shift, and go to state 5

    $default  reduce using rule 111 (declarations)

    data_type      go to state 6
    variable_dec   go to state 7
    function_head  go to state 8
    function_dec   go to state 9
    function_def   go to state 10
    function       go to state 11
    struct_dec     go to state 12
    declarations   go to state 24


State 12

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   88 function_head: . data_type ID '(' parameter_list ')'
   89              | . data_type ID '(' ')'
   90 function_dec: . function_head ';'
   91 function_def: . function_head '{' statement_list '}' ';'
   92 function: . function_dec
   93         | . function_def
  106 struct_dec: . STRUCT struct_head ';'
  107           | . CLASS struct_head ';'
  108 declarations: . variable_dec declarations
  109             | . struct_dec declarations
  109             | struct_dec . declarations
  110             | . function declarations
  111             | . function
  112             | . struct_dec
  112             | struct_dec .  [$end]
  113             | . variable_dec

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    STRUCT       shift, and go to state 4
    CLASS        shift, and go to state 5

    $default  reduce using rule 112 (declarations)

    data_type      go to state 6
    variable_dec   go to state 7
    function_head  go to state 8
    function_dec   go to state 9
    function_def   go to state 10
    function       go to state 11
    struct_dec     go to state 12
    declarations   go to state 25


State 13

  114 begin: declarations .

    $default  reduce using rule 114 (begin)


State 14

    0 $accept: begin . $end

    $end  shift, and go to state 26


State 15

    3 data_type: TIP_SIGN SIGN_TIP .

    $default  reduce using rule 3 (data_type)


State 16

  103 struct_head: ID .  [';']
  104            | ID . '{' struct_body '}'
  105            | ID . '{' struct_body '}' variable_idendifier

    '{'  shift, and go to state 27

    $default  reduce using rule 103 (struct_head)


State 17

  106 struct_dec: STRUCT struct_head . ';'

    ';'  shift, and go to state 28


State 18

  107 struct_dec: CLASS struct_head . ';'

    ';'  shift, and go to state 29


State 19

    9 variable_idendifier: ID .  [',', ';']
   12 variable_dec: data_type ID . ASSIGN expr ';'
   88 function_head: data_type ID . '(' parameter_list ')'
   89              | data_type ID . '(' ')'

    ASSIGN  shift, and go to state 30
    '('     shift, and go to state 31

    $default  reduce using rule 9 (variable_idendifier)


State 20

   10 variable_idendifier: variable_idendifier . ',' ID
   11 variable_dec: data_type variable_idendifier . ';'

    ','  shift, and go to state 32
    ';'  shift, and go to state 33


State 21

  108 declarations: variable_dec declarations .

    $default  reduce using rule 108 (declarations)


State 22

   90 function_dec: function_head ';' .

    $default  reduce using rule 90 (function_dec)


State 23

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   13 statement: . variable_dec
   14          | . function_call
   15          | . if_statement
   16          | . for_statement
   17          | . while_statement
   18          | . dowhile_statement
   19          | . asign_statement
   20          | . eval_statement
   21 statement_list: . statement
   22               | . statement_list statement
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   32 asign_statement: . ref_val ASSIGN expr ';'
   33                | . ref_val MUL_ASSIGN expr ';'
   34                | . ref_val MOD_ASSIGN expr ';'
   35                | . ref_val ADD_ASSIGN expr ';'
   36                | . ref_val MIN_ASSIGN expr ';'
   37                | . ref_val DIV_ASSIGN expr ';'
   38 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   47 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   48 dowhile_statement: . DO block WHILE condition ';'
   49 while_statement: . WHILE condition block
   50 if_statement: . IF condition block ELSE block
   51             | . IF condition block
   91 function_def: function_head '{' . statement_list '}' ';'

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 34
    EVAL         shift, and go to state 35
    IF           shift, and go to state 36
    WHILE        shift, and go to state 37
    DO           shift, and go to state 38
    FOR          shift, and go to state 39

    data_type          go to state 40
    variable_dec       go to state 41
    statement          go to state 42
    statement_list     go to state 43
    ref_val            go to state 44
    function_call      go to state 45
    asign_statement    go to state 46
    eval_statement     go to state 47
    for_statement      go to state 48
    dowhile_statement  go to state 49
    while_statement    go to state 50
    if_statement       go to state 51


State 24

  110 declarations: function declarations .

    $default  reduce using rule 110 (declarations)


State 25

  109 declarations: struct_dec declarations .

    $default  reduce using rule 109 (declarations)


State 26

    0 $accept: begin $end .

    $default  accept


State 27

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   88 function_head: . data_type ID '(' parameter_list ')'
   89              | . data_type ID '(' ')'
   90 function_dec: . function_head ';'
   94 acces_modifier: . ACCESMODIF ':'
   95 member_declarations: . variable_dec
   96                    | . STATIC variable_dec
   97                    | . function_dec
   98                    | . STATIC function_dec
   99 struct_member: . member_declarations
  100              | . acces_modifier member_declarations
  101 struct_body: . struct_member
  102            | . struct_body struct_member
  104 struct_head: ID '{' . struct_body '}'
  105            | ID '{' . struct_body '}' variable_idendifier

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    STATIC       shift, and go to state 52
    ACCESMODIF   shift, and go to state 53

    data_type            go to state 6
    variable_dec         go to state 54
    function_head        go to state 55
    function_dec         go to state 56
    acces_modifier       go to state 57
    member_declarations  go to state 58
    struct_member        go to state 59
    struct_body          go to state 60


State 28

  106 struct_dec: STRUCT struct_head ';' .

    $default  reduce using rule 106 (struct_dec)


State 29

  107 struct_dec: CLASS struct_head ';' .

    $default  reduce using rule 107 (struct_dec)


State 30

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   12 variable_dec: data_type ID ASSIGN . expr ';'
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   39 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   72 arhimetic_expr: . arhimetic_operand
   73               | . arhimetic_operand ADD arhimetic_operand
   74               | . arhimetic_operand MIN arhimetic_operand
   75               | . arhimetic_operand MUL arhimetic_operand
   76               | . arhimetic_operand DIV arhimetic_operand
   77               | . arhimetic_operand MOD arhimetic_operand
   78 expr: . arhimetic_expr
   79     | . calc_statement

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    CALC        shift, and go to state 66
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    calc_statement     go to state 73
    numeric_val        go to state 74
    arhimetic_operand  go to state 75
    arhimetic_expr     go to state 76
    expr               go to state 77


State 31

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   80 no_parameter: . data_type ID
   81 op_parameter: . data_type ID ASSIGN const_value
   82 no_parameter_list: . no_parameter
   83                  | . no_parameter ',' no_parameter_list
   84 op_parameter_list: . op_parameter ',' op_parameter_list
   85                  | . no_parameter_list
   86                  | . op_parameter
   87 parameter_list: . op_parameter_list
   88 function_head: data_type ID '(' . parameter_list ')'
   89              | data_type ID '(' . ')'

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ')'          shift, and go to state 78

    data_type          go to state 79
    no_parameter       go to state 80
    op_parameter       go to state 81
    no_parameter_list  go to state 82
    op_parameter_list  go to state 83
    parameter_list     go to state 84


State 32

   10 variable_idendifier: variable_idendifier ',' . ID

    ID  shift, and go to state 85


State 33

   11 variable_dec: data_type variable_idendifier ';' .

    $default  reduce using rule 11 (variable_dec)


State 34

   23 ref_val: ID .  [ASSIGN, MUL_ASSIGN, MOD_ASSIGN, ADD_ASSIGN, MIN_ASSIGN, DIV_ASSIGN, EQUAL, NOT_EQ, LOWER_EQ, GREATER_EQ, GREATER, LOWER, AND, OR, MUL, DIV, MOD, ADD, MIN, INCR, DECR, ',', ';', ')', '"']
   24        | ID . PMEM ID
   25        | ID . '.' ID
   28 function_call: ID . '(' caller_params ')' ';'
   29              | ID . '(' ')' ';'

    PMEM  shift, and go to state 86
    '.'   shift, and go to state 87
    '('   shift, and go to state 88

    $default  reduce using rule 23 (ref_val)


State 35

   38 eval_statement: EVAL . '(' '"' arhimetic_expr '"' ')' ';'

    '('  shift, and go to state 89


State 36

   46 condition: . '(' stop_cond ')'
   50 if_statement: IF . condition block ELSE block
   51             | IF . condition block

    '('  shift, and go to state 90

    condition  go to state 91


State 37

   46 condition: . '(' stop_cond ')'
   49 while_statement: WHILE . condition block

    '('  shift, and go to state 90

    condition  go to state 92


State 38

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   13 statement: . variable_dec
   14          | . function_call
   15          | . if_statement
   16          | . for_statement
   17          | . while_statement
   18          | . dowhile_statement
   19          | . asign_statement
   20          | . eval_statement
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   30 block: . '{' statement_list '}'
   31      | . statement
   32 asign_statement: . ref_val ASSIGN expr ';'
   33                | . ref_val MUL_ASSIGN expr ';'
   34                | . ref_val MOD_ASSIGN expr ';'
   35                | . ref_val ADD_ASSIGN expr ';'
   36                | . ref_val MIN_ASSIGN expr ';'
   37                | . ref_val DIV_ASSIGN expr ';'
   38 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   47 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   48 dowhile_statement: . DO block WHILE condition ';'
   48                  | DO . block WHILE condition ';'
   49 while_statement: . WHILE condition block
   50 if_statement: . IF condition block ELSE block
   51             | . IF condition block

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 34
    EVAL         shift, and go to state 35
    IF           shift, and go to state 36
    WHILE        shift, and go to state 37
    DO           shift, and go to state 38
    FOR          shift, and go to state 39
    '{'          shift, and go to state 93

    data_type          go to state 40
    variable_dec       go to state 41
    statement          go to state 94
    ref_val            go to state 44
    function_call      go to state 45
    block              go to state 95
    asign_statement    go to state 46
    eval_statement     go to state 47
    for_statement      go to state 48
    dowhile_statement  go to state 49
    while_statement    go to state 50
    if_statement       go to state 51


State 39

   47 for_statement: FOR . '(' loop_init ';' stop_cond ';' loop_step ')' block

    '('  shift, and go to state 96


State 40

    9 variable_idendifier: . ID
   10                    | . variable_idendifier ',' ID
   11 variable_dec: data_type . variable_idendifier ';'
   12             | data_type . ID ASSIGN expr ';'

    ID  shift, and go to state 97

    variable_idendifier  go to state 20


State 41

   13 statement: variable_dec .

    $default  reduce using rule 13 (statement)


State 42

   21 statement_list: statement .

    $default  reduce using rule 21 (statement_list)


State 43

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   13 statement: . variable_dec
   14          | . function_call
   15          | . if_statement
   16          | . for_statement
   17          | . while_statement
   18          | . dowhile_statement
   19          | . asign_statement
   20          | . eval_statement
   22 statement_list: statement_list . statement
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   32 asign_statement: . ref_val ASSIGN expr ';'
   33                | . ref_val MUL_ASSIGN expr ';'
   34                | . ref_val MOD_ASSIGN expr ';'
   35                | . ref_val ADD_ASSIGN expr ';'
   36                | . ref_val MIN_ASSIGN expr ';'
   37                | . ref_val DIV_ASSIGN expr ';'
   38 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   47 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   48 dowhile_statement: . DO block WHILE condition ';'
   49 while_statement: . WHILE condition block
   50 if_statement: . IF condition block ELSE block
   51             | . IF condition block
   91 function_def: function_head '{' statement_list . '}' ';'

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 34
    EVAL         shift, and go to state 35
    IF           shift, and go to state 36
    WHILE        shift, and go to state 37
    DO           shift, and go to state 38
    FOR          shift, and go to state 39
    '}'          shift, and go to state 98

    data_type          go to state 40
    variable_dec       go to state 41
    statement          go to state 99
    ref_val            go to state 44
    function_call      go to state 45
    asign_statement    go to state 46
    eval_statement     go to state 47
    for_statement      go to state 48
    dowhile_statement  go to state 49
    while_statement    go to state 50
    if_statement       go to state 51


State 44

   32 asign_statement: ref_val . ASSIGN expr ';'
   33                | ref_val . MUL_ASSIGN expr ';'
   34                | ref_val . MOD_ASSIGN expr ';'
   35                | ref_val . ADD_ASSIGN expr ';'
   36                | ref_val . MIN_ASSIGN expr ';'
   37                | ref_val . DIV_ASSIGN expr ';'

    ASSIGN      shift, and go to state 100
    MUL_ASSIGN  shift, and go to state 101
    MOD_ASSIGN  shift, and go to state 102
    ADD_ASSIGN  shift, and go to state 103
    MIN_ASSIGN  shift, and go to state 104
    DIV_ASSIGN  shift, and go to state 105


State 45

   14 statement: function_call .

    $default  reduce using rule 14 (statement)


State 46

   19 statement: asign_statement .

    $default  reduce using rule 19 (statement)


State 47

   20 statement: eval_statement .

    $default  reduce using rule 20 (statement)


State 48

   16 statement: for_statement .

    $default  reduce using rule 16 (statement)


State 49

   18 statement: dowhile_statement .

    $default  reduce using rule 18 (statement)


State 50

   17 statement: while_statement .

    $default  reduce using rule 17 (statement)


State 51

   15 statement: if_statement .

    $default  reduce using rule 15 (statement)


State 52

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   88 function_head: . data_type ID '(' parameter_list ')'
   89              | . data_type ID '(' ')'
   90 function_dec: . function_head ';'
   96 member_declarations: STATIC . variable_dec
   98                    | STATIC . function_dec

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3

    data_type      go to state 6
    variable_dec   go to state 106
    function_head  go to state 55
    function_dec   go to state 107


State 53

   94 acces_modifier: ACCESMODIF . ':'

    ':'  shift, and go to state 108


State 54

   95 member_declarations: variable_dec .

    $default  reduce using rule 95 (member_declarations)


State 55

   90 function_dec: function_head . ';'

    ';'  shift, and go to state 22


State 56

   97 member_declarations: function_dec .

    $default  reduce using rule 97 (member_declarations)


State 57

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   88 function_head: . data_type ID '(' parameter_list ')'
   89              | . data_type ID '(' ')'
   90 function_dec: . function_head ';'
   95 member_declarations: . variable_dec
   96                    | . STATIC variable_dec
   97                    | . function_dec
   98                    | . STATIC function_dec
  100 struct_member: acces_modifier . member_declarations

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    STATIC       shift, and go to state 52

    data_type            go to state 6
    variable_dec         go to state 54
    function_head        go to state 55
    function_dec         go to state 56
    member_declarations  go to state 109


State 58

   99 struct_member: member_declarations .

    $default  reduce using rule 99 (struct_member)


State 59

  101 struct_body: struct_member .

    $default  reduce using rule 101 (struct_body)


State 60

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   88 function_head: . data_type ID '(' parameter_list ')'
   89              | . data_type ID '(' ')'
   90 function_dec: . function_head ';'
   94 acces_modifier: . ACCESMODIF ':'
   95 member_declarations: . variable_dec
   96                    | . STATIC variable_dec
   97                    | . function_dec
   98                    | . STATIC function_dec
   99 struct_member: . member_declarations
  100              | . acces_modifier member_declarations
  102 struct_body: struct_body . struct_member
  104 struct_head: ID '{' struct_body . '}'
  105            | ID '{' struct_body . '}' variable_idendifier

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    STATIC       shift, and go to state 52
    ACCESMODIF   shift, and go to state 53
    '}'          shift, and go to state 110

    data_type            go to state 6
    variable_dec         go to state 54
    function_head        go to state 55
    function_dec         go to state 56
    acces_modifier       go to state 57
    member_declarations  go to state 58
    struct_member        go to state 111


State 61

    7 const_value: BOOL_VAL .

    $default  reduce using rule 7 (const_value)


State 62

    5 const_value: CHAR_VAL .

    $default  reduce using rule 5 (const_value)


State 63

    6 const_value: STRING_VAL .

    $default  reduce using rule 6 (const_value)


State 64

    4 const_value: INT_VAL .

    $default  reduce using rule 4 (const_value)


State 65

    8 const_value: DOUBLE_VAL .

    $default  reduce using rule 8 (const_value)


State 66

   39 calc_statement: CALC . '(' '"' arhimetic_expr '"' ')' ';'

    '('  shift, and go to state 112


State 67

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   69                  | INCR . arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 113


State 68

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   70                  | DECR . arhimetic_operand
   71                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 114


State 69

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   71                  | '(' . arhimetic_expr ')'
   72 arhimetic_expr: . arhimetic_operand
   73               | . arhimetic_operand ADD arhimetic_operand
   74               | . arhimetic_operand MIN arhimetic_operand
   75               | . arhimetic_operand MUL arhimetic_operand
   76               | . arhimetic_operand DIV arhimetic_operand
   77               | . arhimetic_operand MOD arhimetic_operand

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 75
    arhimetic_expr     go to state 115


State 70

   65 numeric_val: const_value .

    $default  reduce using rule 65 (numeric_val)


State 71

   63 numeric_val: ref_val .

    $default  reduce using rule 63 (numeric_val)


State 72

   64 numeric_val: function_call .

    $default  reduce using rule 64 (numeric_val)


State 73

   79 expr: calc_statement .

    $default  reduce using rule 79 (expr)


State 74

   66 arhimetic_operand: numeric_val .

    $default  reduce using rule 66 (arhimetic_operand)


State 75

   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR
   72 arhimetic_expr: arhimetic_operand .  [',', ';', ')', '"']
   73               | arhimetic_operand . ADD arhimetic_operand
   74               | arhimetic_operand . MIN arhimetic_operand
   75               | arhimetic_operand . MUL arhimetic_operand
   76               | arhimetic_operand . DIV arhimetic_operand
   77               | arhimetic_operand . MOD arhimetic_operand

    MUL   shift, and go to state 116
    DIV   shift, and go to state 117
    MOD   shift, and go to state 118
    ADD   shift, and go to state 119
    MIN   shift, and go to state 120
    INCR  shift, and go to state 121
    DECR  shift, and go to state 122

    $default  reduce using rule 72 (arhimetic_expr)


State 76

   78 expr: arhimetic_expr .

    $default  reduce using rule 78 (expr)


State 77

   12 variable_dec: data_type ID ASSIGN expr . ';'

    ';'  shift, and go to state 123


State 78

   89 function_head: data_type ID '(' ')' .

    $default  reduce using rule 89 (function_head)


State 79

   80 no_parameter: data_type . ID
   81 op_parameter: data_type . ID ASSIGN const_value

    ID  shift, and go to state 124


State 80

   82 no_parameter_list: no_parameter .  [')']
   83                  | no_parameter . ',' no_parameter_list

    ','  shift, and go to state 125

    $default  reduce using rule 82 (no_parameter_list)


State 81

   84 op_parameter_list: op_parameter . ',' op_parameter_list
   86                  | op_parameter .  [')']

    ','  shift, and go to state 126

    $default  reduce using rule 86 (op_parameter_list)


State 82

   85 op_parameter_list: no_parameter_list .

    $default  reduce using rule 85 (op_parameter_list)


State 83

   87 parameter_list: op_parameter_list .

    $default  reduce using rule 87 (parameter_list)


State 84

   88 function_head: data_type ID '(' parameter_list . ')'

    ')'  shift, and go to state 127


State 85

   10 variable_idendifier: variable_idendifier ',' ID .

    $default  reduce using rule 10 (variable_idendifier)


State 86

   24 ref_val: ID PMEM . ID

    ID  shift, and go to state 128


State 87

   25 ref_val: ID '.' . ID

    ID  shift, and go to state 129


State 88

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   26 caller_params: . expr
   27              | . expr ',' caller_params
   28 function_call: . ID '(' caller_params ')' ';'
   28              | ID '(' . caller_params ')' ';'
   29              | . ID '(' ')' ';'
   29              | ID '(' . ')' ';'
   39 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   72 arhimetic_expr: . arhimetic_operand
   73               | . arhimetic_operand ADD arhimetic_operand
   74               | . arhimetic_operand MIN arhimetic_operand
   75               | . arhimetic_operand MUL arhimetic_operand
   76               | . arhimetic_operand DIV arhimetic_operand
   77               | . arhimetic_operand MOD arhimetic_operand
   78 expr: . arhimetic_expr
   79     | . calc_statement

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    CALC        shift, and go to state 66
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69
    ')'         shift, and go to state 130

    const_value        go to state 70
    ref_val            go to state 71
    caller_params      go to state 131
    function_call      go to state 72
    calc_statement     go to state 73
    numeric_val        go to state 74
    arhimetic_operand  go to state 75
    arhimetic_expr     go to state 76
    expr               go to state 132


State 89

   38 eval_statement: EVAL '(' . '"' arhimetic_expr '"' ')' ';'

    '"'  shift, and go to state 133


State 90

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   42 stop_cond: . lo_expr
   43          | . %empty  [')']
   46 condition: '(' . stop_cond ')'
   52 lo_expr: . NOT lo_expr
   53        | . lo_expr AND lo_expr
   54        | . lo_expr OR lo_expr
   55        | . arhimetic_operand GREATER arhimetic_operand
   56        | . arhimetic_operand LOWER arhimetic_operand
   57        | . arhimetic_operand EQUAL arhimetic_operand
   58        | . arhimetic_operand NOT_EQ arhimetic_operand
   59        | . arhimetic_operand LOWER_EQ arhimetic_operand
   60        | . arhimetic_operand GREATER_EQ arhimetic_operand
   61        | . BOOL_VAL
   62        | . '(' lo_expr ')'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 134
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    NOT         shift, and go to state 135
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 136

    $default  reduce using rule 43 (stop_cond)

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    stop_cond          go to state 137
    lo_expr            go to state 138
    numeric_val        go to state 74
    arhimetic_operand  go to state 139


State 91

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   13 statement: . variable_dec
   14          | . function_call
   15          | . if_statement
   16          | . for_statement
   17          | . while_statement
   18          | . dowhile_statement
   19          | . asign_statement
   20          | . eval_statement
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   30 block: . '{' statement_list '}'
   31      | . statement
   32 asign_statement: . ref_val ASSIGN expr ';'
   33                | . ref_val MUL_ASSIGN expr ';'
   34                | . ref_val MOD_ASSIGN expr ';'
   35                | . ref_val ADD_ASSIGN expr ';'
   36                | . ref_val MIN_ASSIGN expr ';'
   37                | . ref_val DIV_ASSIGN expr ';'
   38 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   47 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   48 dowhile_statement: . DO block WHILE condition ';'
   49 while_statement: . WHILE condition block
   50 if_statement: . IF condition block ELSE block
   50             | IF condition . block ELSE block
   51             | . IF condition block
   51             | IF condition . block

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 34
    EVAL         shift, and go to state 35
    IF           shift, and go to state 36
    WHILE        shift, and go to state 37
    DO           shift, and go to state 38
    FOR          shift, and go to state 39
    '{'          shift, and go to state 93

    data_type          go to state 40
    variable_dec       go to state 41
    statement          go to state 94
    ref_val            go to state 44
    function_call      go to state 45
    block              go to state 140
    asign_statement    go to state 46
    eval_statement     go to state 47
    for_statement      go to state 48
    dowhile_statement  go to state 49
    while_statement    go to state 50
    if_statement       go to state 51


State 92

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   13 statement: . variable_dec
   14          | . function_call
   15          | . if_statement
   16          | . for_statement
   17          | . while_statement
   18          | . dowhile_statement
   19          | . asign_statement
   20          | . eval_statement
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   30 block: . '{' statement_list '}'
   31      | . statement
   32 asign_statement: . ref_val ASSIGN expr ';'
   33                | . ref_val MUL_ASSIGN expr ';'
   34                | . ref_val MOD_ASSIGN expr ';'
   35                | . ref_val ADD_ASSIGN expr ';'
   36                | . ref_val MIN_ASSIGN expr ';'
   37                | . ref_val DIV_ASSIGN expr ';'
   38 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   47 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   48 dowhile_statement: . DO block WHILE condition ';'
   49 while_statement: . WHILE condition block
   49                | WHILE condition . block
   50 if_statement: . IF condition block ELSE block
   51             | . IF condition block

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 34
    EVAL         shift, and go to state 35
    IF           shift, and go to state 36
    WHILE        shift, and go to state 37
    DO           shift, and go to state 38
    FOR          shift, and go to state 39
    '{'          shift, and go to state 93

    data_type          go to state 40
    variable_dec       go to state 41
    statement          go to state 94
    ref_val            go to state 44
    function_call      go to state 45
    block              go to state 141
    asign_statement    go to state 46
    eval_statement     go to state 47
    for_statement      go to state 48
    dowhile_statement  go to state 49
    while_statement    go to state 50
    if_statement       go to state 51


State 93

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   13 statement: . variable_dec
   14          | . function_call
   15          | . if_statement
   16          | . for_statement
   17          | . while_statement
   18          | . dowhile_statement
   19          | . asign_statement
   20          | . eval_statement
   21 statement_list: . statement
   22               | . statement_list statement
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   30 block: '{' . statement_list '}'
   32 asign_statement: . ref_val ASSIGN expr ';'
   33                | . ref_val MUL_ASSIGN expr ';'
   34                | . ref_val MOD_ASSIGN expr ';'
   35                | . ref_val ADD_ASSIGN expr ';'
   36                | . ref_val MIN_ASSIGN expr ';'
   37                | . ref_val DIV_ASSIGN expr ';'
   38 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   47 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   48 dowhile_statement: . DO block WHILE condition ';'
   49 while_statement: . WHILE condition block
   50 if_statement: . IF condition block ELSE block
   51             | . IF condition block

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 34
    EVAL         shift, and go to state 35
    IF           shift, and go to state 36
    WHILE        shift, and go to state 37
    DO           shift, and go to state 38
    FOR          shift, and go to state 39

    data_type          go to state 40
    variable_dec       go to state 41
    statement          go to state 42
    statement_list     go to state 142
    ref_val            go to state 44
    function_call      go to state 45
    asign_statement    go to state 46
    eval_statement     go to state 47
    for_statement      go to state 48
    dowhile_statement  go to state 49
    while_statement    go to state 50
    if_statement       go to state 51


State 94

   31 block: statement .

    $default  reduce using rule 31 (block)


State 95

   48 dowhile_statement: DO block . WHILE condition ';'

    WHILE  shift, and go to state 143


State 96

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   13 statement: . variable_dec
   14          | . function_call
   15          | . if_statement
   16          | . for_statement
   17          | . while_statement
   18          | . dowhile_statement
   19          | . asign_statement
   20          | . eval_statement
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   32 asign_statement: . ref_val ASSIGN expr ';'
   33                | . ref_val MUL_ASSIGN expr ';'
   34                | . ref_val MOD_ASSIGN expr ';'
   35                | . ref_val ADD_ASSIGN expr ';'
   36                | . ref_val MIN_ASSIGN expr ';'
   37                | . ref_val DIV_ASSIGN expr ';'
   38 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   40 loop_init: . statement
   41          | . %empty  [';']
   47 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   47              | FOR '(' . loop_init ';' stop_cond ';' loop_step ')' block
   48 dowhile_statement: . DO block WHILE condition ';'
   49 while_statement: . WHILE condition block
   50 if_statement: . IF condition block ELSE block
   51             | . IF condition block

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 34
    EVAL         shift, and go to state 35
    IF           shift, and go to state 36
    WHILE        shift, and go to state 37
    DO           shift, and go to state 38
    FOR          shift, and go to state 39

    $default  reduce using rule 41 (loop_init)

    data_type          go to state 40
    variable_dec       go to state 41
    statement          go to state 144
    ref_val            go to state 44
    function_call      go to state 45
    asign_statement    go to state 46
    eval_statement     go to state 47
    loop_init          go to state 145
    for_statement      go to state 48
    dowhile_statement  go to state 49
    while_statement    go to state 50
    if_statement       go to state 51


State 97

    9 variable_idendifier: ID .  [',', ';']
   12 variable_dec: data_type ID . ASSIGN expr ';'

    ASSIGN  shift, and go to state 30

    $default  reduce using rule 9 (variable_idendifier)


State 98

   91 function_def: function_head '{' statement_list '}' . ';'

    ';'  shift, and go to state 146


State 99

   22 statement_list: statement_list statement .

    $default  reduce using rule 22 (statement_list)


State 100

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   32 asign_statement: ref_val ASSIGN . expr ';'
   39 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   72 arhimetic_expr: . arhimetic_operand
   73               | . arhimetic_operand ADD arhimetic_operand
   74               | . arhimetic_operand MIN arhimetic_operand
   75               | . arhimetic_operand MUL arhimetic_operand
   76               | . arhimetic_operand DIV arhimetic_operand
   77               | . arhimetic_operand MOD arhimetic_operand
   78 expr: . arhimetic_expr
   79     | . calc_statement

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    CALC        shift, and go to state 66
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    calc_statement     go to state 73
    numeric_val        go to state 74
    arhimetic_operand  go to state 75
    arhimetic_expr     go to state 76
    expr               go to state 147


State 101

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   33 asign_statement: ref_val MUL_ASSIGN . expr ';'
   39 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   72 arhimetic_expr: . arhimetic_operand
   73               | . arhimetic_operand ADD arhimetic_operand
   74               | . arhimetic_operand MIN arhimetic_operand
   75               | . arhimetic_operand MUL arhimetic_operand
   76               | . arhimetic_operand DIV arhimetic_operand
   77               | . arhimetic_operand MOD arhimetic_operand
   78 expr: . arhimetic_expr
   79     | . calc_statement

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    CALC        shift, and go to state 66
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    calc_statement     go to state 73
    numeric_val        go to state 74
    arhimetic_operand  go to state 75
    arhimetic_expr     go to state 76
    expr               go to state 148


State 102

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   34 asign_statement: ref_val MOD_ASSIGN . expr ';'
   39 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   72 arhimetic_expr: . arhimetic_operand
   73               | . arhimetic_operand ADD arhimetic_operand
   74               | . arhimetic_operand MIN arhimetic_operand
   75               | . arhimetic_operand MUL arhimetic_operand
   76               | . arhimetic_operand DIV arhimetic_operand
   77               | . arhimetic_operand MOD arhimetic_operand
   78 expr: . arhimetic_expr
   79     | . calc_statement

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    CALC        shift, and go to state 66
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    calc_statement     go to state 73
    numeric_val        go to state 74
    arhimetic_operand  go to state 75
    arhimetic_expr     go to state 76
    expr               go to state 149


State 103

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   35 asign_statement: ref_val ADD_ASSIGN . expr ';'
   39 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   72 arhimetic_expr: . arhimetic_operand
   73               | . arhimetic_operand ADD arhimetic_operand
   74               | . arhimetic_operand MIN arhimetic_operand
   75               | . arhimetic_operand MUL arhimetic_operand
   76               | . arhimetic_operand DIV arhimetic_operand
   77               | . arhimetic_operand MOD arhimetic_operand
   78 expr: . arhimetic_expr
   79     | . calc_statement

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    CALC        shift, and go to state 66
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    calc_statement     go to state 73
    numeric_val        go to state 74
    arhimetic_operand  go to state 75
    arhimetic_expr     go to state 76
    expr               go to state 150


State 104

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   36 asign_statement: ref_val MIN_ASSIGN . expr ';'
   39 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   72 arhimetic_expr: . arhimetic_operand
   73               | . arhimetic_operand ADD arhimetic_operand
   74               | . arhimetic_operand MIN arhimetic_operand
   75               | . arhimetic_operand MUL arhimetic_operand
   76               | . arhimetic_operand DIV arhimetic_operand
   77               | . arhimetic_operand MOD arhimetic_operand
   78 expr: . arhimetic_expr
   79     | . calc_statement

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    CALC        shift, and go to state 66
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    calc_statement     go to state 73
    numeric_val        go to state 74
    arhimetic_operand  go to state 75
    arhimetic_expr     go to state 76
    expr               go to state 151


State 105

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   37 asign_statement: ref_val DIV_ASSIGN . expr ';'
   39 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   72 arhimetic_expr: . arhimetic_operand
   73               | . arhimetic_operand ADD arhimetic_operand
   74               | . arhimetic_operand MIN arhimetic_operand
   75               | . arhimetic_operand MUL arhimetic_operand
   76               | . arhimetic_operand DIV arhimetic_operand
   77               | . arhimetic_operand MOD arhimetic_operand
   78 expr: . arhimetic_expr
   79     | . calc_statement

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    CALC        shift, and go to state 66
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    calc_statement     go to state 73
    numeric_val        go to state 74
    arhimetic_operand  go to state 75
    arhimetic_expr     go to state 76
    expr               go to state 152


State 106

   96 member_declarations: STATIC variable_dec .

    $default  reduce using rule 96 (member_declarations)


State 107

   98 member_declarations: STATIC function_dec .

    $default  reduce using rule 98 (member_declarations)


State 108

   94 acces_modifier: ACCESMODIF ':' .

    $default  reduce using rule 94 (acces_modifier)


State 109

  100 struct_member: acces_modifier member_declarations .

    $default  reduce using rule 100 (struct_member)


State 110

    9 variable_idendifier: . ID
   10                    | . variable_idendifier ',' ID
  104 struct_head: ID '{' struct_body '}' .  [';']
  105            | ID '{' struct_body '}' . variable_idendifier

    ID  shift, and go to state 153

    $default  reduce using rule 104 (struct_head)

    variable_idendifier  go to state 154


State 111

  102 struct_body: struct_body struct_member .

    $default  reduce using rule 102 (struct_body)


State 112

   39 calc_statement: CALC '(' . '"' arhimetic_expr '"' ')' ';'

    '"'  shift, and go to state 155


State 113

   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR
   69                  | INCR arhimetic_operand .  [EQUAL, NOT_EQ, LOWER_EQ, GREATER_EQ, GREATER, LOWER, AND, OR, MUL, DIV, MOD, ADD, MIN, INCR, DECR, ',', ';', ')', '"']

    $default  reduce using rule 69 (arhimetic_operand)

    Conflict between rule 69 and token INCR resolved as reduce (%left INCR).
    Conflict between rule 69 and token DECR resolved as reduce (%left DECR).


State 114

   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR
   70                  | DECR arhimetic_operand .  [EQUAL, NOT_EQ, LOWER_EQ, GREATER_EQ, GREATER, LOWER, AND, OR, MUL, DIV, MOD, ADD, MIN, INCR, DECR, ',', ';', ')', '"']

    $default  reduce using rule 70 (arhimetic_operand)

    Conflict between rule 70 and token INCR resolved as reduce (%left INCR).
    Conflict between rule 70 and token DECR resolved as reduce (%left DECR).


State 115

   71 arhimetic_operand: '(' arhimetic_expr . ')'

    ')'  shift, and go to state 156


State 116

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   75 arhimetic_expr: arhimetic_operand MUL . arhimetic_operand

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 157


State 117

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   76 arhimetic_expr: arhimetic_operand DIV . arhimetic_operand

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 158


State 118

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   77 arhimetic_expr: arhimetic_operand MOD . arhimetic_operand

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 159


State 119

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   73 arhimetic_expr: arhimetic_operand ADD . arhimetic_operand

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 160


State 120

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   74 arhimetic_expr: arhimetic_operand MIN . arhimetic_operand

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 161


State 121

   67 arhimetic_operand: arhimetic_operand INCR .

    $default  reduce using rule 67 (arhimetic_operand)


State 122

   68 arhimetic_operand: arhimetic_operand DECR .

    $default  reduce using rule 68 (arhimetic_operand)


State 123

   12 variable_dec: data_type ID ASSIGN expr ';' .

    $default  reduce using rule 12 (variable_dec)


State 124

   80 no_parameter: data_type ID .  [',', ')']
   81 op_parameter: data_type ID . ASSIGN const_value

    ASSIGN  shift, and go to state 162

    $default  reduce using rule 80 (no_parameter)


State 125

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   80 no_parameter: . data_type ID
   82 no_parameter_list: . no_parameter
   83                  | . no_parameter ',' no_parameter_list
   83                  | no_parameter ',' . no_parameter_list

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3

    data_type          go to state 163
    no_parameter       go to state 80
    no_parameter_list  go to state 164


State 126

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   80 no_parameter: . data_type ID
   81 op_parameter: . data_type ID ASSIGN const_value
   82 no_parameter_list: . no_parameter
   83                  | . no_parameter ',' no_parameter_list
   84 op_parameter_list: . op_parameter ',' op_parameter_list
   84                  | op_parameter ',' . op_parameter_list
   85                  | . no_parameter_list
   86                  | . op_parameter

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3

    data_type          go to state 79
    no_parameter       go to state 80
    op_parameter       go to state 81
    no_parameter_list  go to state 82
    op_parameter_list  go to state 165


State 127

   88 function_head: data_type ID '(' parameter_list ')' .

    $default  reduce using rule 88 (function_head)


State 128

   24 ref_val: ID PMEM ID .

    $default  reduce using rule 24 (ref_val)


State 129

   25 ref_val: ID '.' ID .

    $default  reduce using rule 25 (ref_val)


State 130

   29 function_call: ID '(' ')' . ';'

    ';'  shift, and go to state 166


State 131

   28 function_call: ID '(' caller_params . ')' ';'

    ')'  shift, and go to state 167


State 132

   26 caller_params: expr .  [')']
   27              | expr . ',' caller_params

    ','  shift, and go to state 168

    $default  reduce using rule 26 (caller_params)


State 133

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   38 eval_statement: EVAL '(' '"' . arhimetic_expr '"' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   72 arhimetic_expr: . arhimetic_operand
   73               | . arhimetic_operand ADD arhimetic_operand
   74               | . arhimetic_operand MIN arhimetic_operand
   75               | . arhimetic_operand MUL arhimetic_operand
   76               | . arhimetic_operand DIV arhimetic_operand
   77               | . arhimetic_operand MOD arhimetic_operand

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 75
    arhimetic_expr     go to state 169


State 134

    7 const_value: BOOL_VAL .  [EQUAL, NOT_EQ, LOWER_EQ, GREATER_EQ, GREATER, LOWER, MUL, DIV, MOD, ADD, MIN, INCR, DECR, ')']
   61 lo_expr: BOOL_VAL .  [AND, OR, ';', ')']

    AND       reduce using rule 61 (lo_expr)
    OR        reduce using rule 61 (lo_expr)
    ';'       reduce using rule 61 (lo_expr)
    ')'       reduce using rule 7 (const_value)
    ')'       [reduce using rule 61 (lo_expr)]
    $default  reduce using rule 7 (const_value)


State 135

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   52 lo_expr: . NOT lo_expr
   52        | NOT . lo_expr
   53        | . lo_expr AND lo_expr
   54        | . lo_expr OR lo_expr
   55        | . arhimetic_operand GREATER arhimetic_operand
   56        | . arhimetic_operand LOWER arhimetic_operand
   57        | . arhimetic_operand EQUAL arhimetic_operand
   58        | . arhimetic_operand NOT_EQ arhimetic_operand
   59        | . arhimetic_operand LOWER_EQ arhimetic_operand
   60        | . arhimetic_operand GREATER_EQ arhimetic_operand
   61        | . BOOL_VAL
   62        | . '(' lo_expr ')'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 134
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    NOT         shift, and go to state 135
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 136

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    lo_expr            go to state 170
    numeric_val        go to state 74
    arhimetic_operand  go to state 139


State 136

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   52 lo_expr: . NOT lo_expr
   53        | . lo_expr AND lo_expr
   54        | . lo_expr OR lo_expr
   55        | . arhimetic_operand GREATER arhimetic_operand
   56        | . arhimetic_operand LOWER arhimetic_operand
   57        | . arhimetic_operand EQUAL arhimetic_operand
   58        | . arhimetic_operand NOT_EQ arhimetic_operand
   59        | . arhimetic_operand LOWER_EQ arhimetic_operand
   60        | . arhimetic_operand GREATER_EQ arhimetic_operand
   61        | . BOOL_VAL
   62        | . '(' lo_expr ')'
   62        | '(' . lo_expr ')'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   71                  | '(' . arhimetic_expr ')'
   72 arhimetic_expr: . arhimetic_operand
   73               | . arhimetic_operand ADD arhimetic_operand
   74               | . arhimetic_operand MIN arhimetic_operand
   75               | . arhimetic_operand MUL arhimetic_operand
   76               | . arhimetic_operand DIV arhimetic_operand
   77               | . arhimetic_operand MOD arhimetic_operand

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 134
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    NOT         shift, and go to state 135
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 136

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    lo_expr            go to state 171
    numeric_val        go to state 74
    arhimetic_operand  go to state 172
    arhimetic_expr     go to state 115


State 137

   46 condition: '(' stop_cond . ')'

    ')'  shift, and go to state 173


State 138

   42 stop_cond: lo_expr .  [';', ')']
   53 lo_expr: lo_expr . AND lo_expr
   54        | lo_expr . OR lo_expr

    AND  shift, and go to state 174
    OR   shift, and go to state 175

    $default  reduce using rule 42 (stop_cond)


State 139

   55 lo_expr: arhimetic_operand . GREATER arhimetic_operand
   56        | arhimetic_operand . LOWER arhimetic_operand
   57        | arhimetic_operand . EQUAL arhimetic_operand
   58        | arhimetic_operand . NOT_EQ arhimetic_operand
   59        | arhimetic_operand . LOWER_EQ arhimetic_operand
   60        | arhimetic_operand . GREATER_EQ arhimetic_operand
   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR

    EQUAL       shift, and go to state 176
    NOT_EQ      shift, and go to state 177
    LOWER_EQ    shift, and go to state 178
    GREATER_EQ  shift, and go to state 179
    GREATER     shift, and go to state 180
    LOWER       shift, and go to state 181
    INCR        shift, and go to state 121
    DECR        shift, and go to state 122


State 140

   50 if_statement: IF condition block . ELSE block
   51             | IF condition block .  [SIGN_TIP, TRIVIAL_TIP, TIP_SIGN, ID, EVAL, IF, ELSE, WHILE, DO, FOR, ';', '}']

    ELSE  shift, and go to state 182

    ELSE      [reduce using rule 51 (if_statement)]
    $default  reduce using rule 51 (if_statement)


State 141

   49 while_statement: WHILE condition block .

    $default  reduce using rule 49 (while_statement)


State 142

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   13 statement: . variable_dec
   14          | . function_call
   15          | . if_statement
   16          | . for_statement
   17          | . while_statement
   18          | . dowhile_statement
   19          | . asign_statement
   20          | . eval_statement
   22 statement_list: statement_list . statement
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   30 block: '{' statement_list . '}'
   32 asign_statement: . ref_val ASSIGN expr ';'
   33                | . ref_val MUL_ASSIGN expr ';'
   34                | . ref_val MOD_ASSIGN expr ';'
   35                | . ref_val ADD_ASSIGN expr ';'
   36                | . ref_val MIN_ASSIGN expr ';'
   37                | . ref_val DIV_ASSIGN expr ';'
   38 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   47 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   48 dowhile_statement: . DO block WHILE condition ';'
   49 while_statement: . WHILE condition block
   50 if_statement: . IF condition block ELSE block
   51             | . IF condition block

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 34
    EVAL         shift, and go to state 35
    IF           shift, and go to state 36
    WHILE        shift, and go to state 37
    DO           shift, and go to state 38
    FOR          shift, and go to state 39
    '}'          shift, and go to state 183

    data_type          go to state 40
    variable_dec       go to state 41
    statement          go to state 99
    ref_val            go to state 44
    function_call      go to state 45
    asign_statement    go to state 46
    eval_statement     go to state 47
    for_statement      go to state 48
    dowhile_statement  go to state 49
    while_statement    go to state 50
    if_statement       go to state 51


State 143

   46 condition: . '(' stop_cond ')'
   48 dowhile_statement: DO block WHILE . condition ';'

    '('  shift, and go to state 90

    condition  go to state 184


State 144

   40 loop_init: statement .

    $default  reduce using rule 40 (loop_init)


State 145

   47 for_statement: FOR '(' loop_init . ';' stop_cond ';' loop_step ')' block

    ';'  shift, and go to state 185


State 146

   91 function_def: function_head '{' statement_list '}' ';' .

    $default  reduce using rule 91 (function_def)


State 147

   32 asign_statement: ref_val ASSIGN expr . ';'

    ';'  shift, and go to state 186


State 148

   33 asign_statement: ref_val MUL_ASSIGN expr . ';'

    ';'  shift, and go to state 187


State 149

   34 asign_statement: ref_val MOD_ASSIGN expr . ';'

    ';'  shift, and go to state 188


State 150

   35 asign_statement: ref_val ADD_ASSIGN expr . ';'

    ';'  shift, and go to state 189


State 151

   36 asign_statement: ref_val MIN_ASSIGN expr . ';'

    ';'  shift, and go to state 190


State 152

   37 asign_statement: ref_val DIV_ASSIGN expr . ';'

    ';'  shift, and go to state 191


State 153

    9 variable_idendifier: ID .

    $default  reduce using rule 9 (variable_idendifier)


State 154

   10 variable_idendifier: variable_idendifier . ',' ID
  105 struct_head: ID '{' struct_body '}' variable_idendifier .  [';']

    ','  shift, and go to state 32

    $default  reduce using rule 105 (struct_head)


State 155

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   39 calc_statement: CALC '(' '"' . arhimetic_expr '"' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   72 arhimetic_expr: . arhimetic_operand
   73               | . arhimetic_operand ADD arhimetic_operand
   74               | . arhimetic_operand MIN arhimetic_operand
   75               | . arhimetic_operand MUL arhimetic_operand
   76               | . arhimetic_operand DIV arhimetic_operand
   77               | . arhimetic_operand MOD arhimetic_operand

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 75
    arhimetic_expr     go to state 192


State 156

   71 arhimetic_operand: '(' arhimetic_expr ')' .

    $default  reduce using rule 71 (arhimetic_operand)


State 157

   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR
   75 arhimetic_expr: arhimetic_operand MUL arhimetic_operand .  [',', ';', ')', '"']

    INCR  shift, and go to state 121
    DECR  shift, and go to state 122

    $default  reduce using rule 75 (arhimetic_expr)


State 158

   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR
   76 arhimetic_expr: arhimetic_operand DIV arhimetic_operand .  [',', ';', ')', '"']

    INCR  shift, and go to state 121
    DECR  shift, and go to state 122

    $default  reduce using rule 76 (arhimetic_expr)


State 159

   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR
   77 arhimetic_expr: arhimetic_operand MOD arhimetic_operand .  [',', ';', ')', '"']

    INCR  shift, and go to state 121
    DECR  shift, and go to state 122

    $default  reduce using rule 77 (arhimetic_expr)


State 160

   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR
   73 arhimetic_expr: arhimetic_operand ADD arhimetic_operand .  [',', ';', ')', '"']

    INCR  shift, and go to state 121
    DECR  shift, and go to state 122

    $default  reduce using rule 73 (arhimetic_expr)


State 161

   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR
   74 arhimetic_expr: arhimetic_operand MIN arhimetic_operand .  [',', ';', ')', '"']

    INCR  shift, and go to state 121
    DECR  shift, and go to state 122

    $default  reduce using rule 74 (arhimetic_expr)


State 162

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   81 op_parameter: data_type ID ASSIGN . const_value

    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65

    const_value  go to state 193


State 163

   80 no_parameter: data_type . ID

    ID  shift, and go to state 194


State 164

   83 no_parameter_list: no_parameter ',' no_parameter_list .

    $default  reduce using rule 83 (no_parameter_list)


State 165

   84 op_parameter_list: op_parameter ',' op_parameter_list .

    $default  reduce using rule 84 (op_parameter_list)


State 166

   29 function_call: ID '(' ')' ';' .

    $default  reduce using rule 29 (function_call)


State 167

   28 function_call: ID '(' caller_params ')' . ';'

    ';'  shift, and go to state 195


State 168

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   26 caller_params: . expr
   27              | . expr ',' caller_params
   27              | expr ',' . caller_params
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   39 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   72 arhimetic_expr: . arhimetic_operand
   73               | . arhimetic_operand ADD arhimetic_operand
   74               | . arhimetic_operand MIN arhimetic_operand
   75               | . arhimetic_operand MUL arhimetic_operand
   76               | . arhimetic_operand DIV arhimetic_operand
   77               | . arhimetic_operand MOD arhimetic_operand
   78 expr: . arhimetic_expr
   79     | . calc_statement

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    CALC        shift, and go to state 66
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    caller_params      go to state 196
    function_call      go to state 72
    calc_statement     go to state 73
    numeric_val        go to state 74
    arhimetic_operand  go to state 75
    arhimetic_expr     go to state 76
    expr               go to state 132


State 169

   38 eval_statement: EVAL '(' '"' arhimetic_expr . '"' ')' ';'

    '"'  shift, and go to state 197


State 170

   52 lo_expr: NOT lo_expr .  [';', ')']
   53        | lo_expr . AND lo_expr
   54        | lo_expr . OR lo_expr

    AND  shift, and go to state 174
    OR   shift, and go to state 175

    $default  reduce using rule 52 (lo_expr)

    Conflict between rule 52 and token AND resolved as shift (NOT < AND).
    Conflict between rule 52 and token OR resolved as shift (NOT < OR).


State 171

   53 lo_expr: lo_expr . AND lo_expr
   54        | lo_expr . OR lo_expr
   62        | '(' lo_expr . ')'

    AND  shift, and go to state 174
    OR   shift, and go to state 175
    ')'  shift, and go to state 198


State 172

   55 lo_expr: arhimetic_operand . GREATER arhimetic_operand
   56        | arhimetic_operand . LOWER arhimetic_operand
   57        | arhimetic_operand . EQUAL arhimetic_operand
   58        | arhimetic_operand . NOT_EQ arhimetic_operand
   59        | arhimetic_operand . LOWER_EQ arhimetic_operand
   60        | arhimetic_operand . GREATER_EQ arhimetic_operand
   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR
   72 arhimetic_expr: arhimetic_operand .  [')']
   73               | arhimetic_operand . ADD arhimetic_operand
   74               | arhimetic_operand . MIN arhimetic_operand
   75               | arhimetic_operand . MUL arhimetic_operand
   76               | arhimetic_operand . DIV arhimetic_operand
   77               | arhimetic_operand . MOD arhimetic_operand

    EQUAL       shift, and go to state 176
    NOT_EQ      shift, and go to state 177
    LOWER_EQ    shift, and go to state 178
    GREATER_EQ  shift, and go to state 179
    GREATER     shift, and go to state 180
    LOWER       shift, and go to state 181
    MUL         shift, and go to state 116
    DIV         shift, and go to state 117
    MOD         shift, and go to state 118
    ADD         shift, and go to state 119
    MIN         shift, and go to state 120
    INCR        shift, and go to state 121
    DECR        shift, and go to state 122

    $default  reduce using rule 72 (arhimetic_expr)


State 173

   46 condition: '(' stop_cond ')' .

    $default  reduce using rule 46 (condition)


State 174

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   52 lo_expr: . NOT lo_expr
   53        | . lo_expr AND lo_expr
   53        | lo_expr AND . lo_expr
   54        | . lo_expr OR lo_expr
   55        | . arhimetic_operand GREATER arhimetic_operand
   56        | . arhimetic_operand LOWER arhimetic_operand
   57        | . arhimetic_operand EQUAL arhimetic_operand
   58        | . arhimetic_operand NOT_EQ arhimetic_operand
   59        | . arhimetic_operand LOWER_EQ arhimetic_operand
   60        | . arhimetic_operand GREATER_EQ arhimetic_operand
   61        | . BOOL_VAL
   62        | . '(' lo_expr ')'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 134
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    NOT         shift, and go to state 135
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 136

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    lo_expr            go to state 199
    numeric_val        go to state 74
    arhimetic_operand  go to state 139


State 175

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   52 lo_expr: . NOT lo_expr
   53        | . lo_expr AND lo_expr
   54        | . lo_expr OR lo_expr
   54        | lo_expr OR . lo_expr
   55        | . arhimetic_operand GREATER arhimetic_operand
   56        | . arhimetic_operand LOWER arhimetic_operand
   57        | . arhimetic_operand EQUAL arhimetic_operand
   58        | . arhimetic_operand NOT_EQ arhimetic_operand
   59        | . arhimetic_operand LOWER_EQ arhimetic_operand
   60        | . arhimetic_operand GREATER_EQ arhimetic_operand
   61        | . BOOL_VAL
   62        | . '(' lo_expr ')'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 134
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    NOT         shift, and go to state 135
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 136

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    lo_expr            go to state 200
    numeric_val        go to state 74
    arhimetic_operand  go to state 139


State 176

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   57 lo_expr: arhimetic_operand EQUAL . arhimetic_operand
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 201


State 177

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   58 lo_expr: arhimetic_operand NOT_EQ . arhimetic_operand
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 202


State 178

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   59 lo_expr: arhimetic_operand LOWER_EQ . arhimetic_operand
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 203


State 179

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   60 lo_expr: arhimetic_operand GREATER_EQ . arhimetic_operand
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 204


State 180

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   55 lo_expr: arhimetic_operand GREATER . arhimetic_operand
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 205


State 181

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   56 lo_expr: arhimetic_operand LOWER . arhimetic_operand
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    numeric_val        go to state 74
    arhimetic_operand  go to state 206


State 182

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   13 statement: . variable_dec
   14          | . function_call
   15          | . if_statement
   16          | . for_statement
   17          | . while_statement
   18          | . dowhile_statement
   19          | . asign_statement
   20          | . eval_statement
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   30 block: . '{' statement_list '}'
   31      | . statement
   32 asign_statement: . ref_val ASSIGN expr ';'
   33                | . ref_val MUL_ASSIGN expr ';'
   34                | . ref_val MOD_ASSIGN expr ';'
   35                | . ref_val ADD_ASSIGN expr ';'
   36                | . ref_val MIN_ASSIGN expr ';'
   37                | . ref_val DIV_ASSIGN expr ';'
   38 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   47 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   48 dowhile_statement: . DO block WHILE condition ';'
   49 while_statement: . WHILE condition block
   50 if_statement: . IF condition block ELSE block
   50             | IF condition block ELSE . block
   51             | . IF condition block

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 34
    EVAL         shift, and go to state 35
    IF           shift, and go to state 36
    WHILE        shift, and go to state 37
    DO           shift, and go to state 38
    FOR          shift, and go to state 39
    '{'          shift, and go to state 93

    data_type          go to state 40
    variable_dec       go to state 41
    statement          go to state 94
    ref_val            go to state 44
    function_call      go to state 45
    block              go to state 207
    asign_statement    go to state 46
    eval_statement     go to state 47
    for_statement      go to state 48
    dowhile_statement  go to state 49
    while_statement    go to state 50
    if_statement       go to state 51


State 183

   30 block: '{' statement_list '}' .

    $default  reduce using rule 30 (block)


State 184

   48 dowhile_statement: DO block WHILE condition . ';'

    ';'  shift, and go to state 208


State 185

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   42 stop_cond: . lo_expr
   43          | . %empty  [';']
   47 for_statement: FOR '(' loop_init ';' . stop_cond ';' loop_step ')' block
   52 lo_expr: . NOT lo_expr
   53        | . lo_expr AND lo_expr
   54        | . lo_expr OR lo_expr
   55        | . arhimetic_operand GREATER arhimetic_operand
   56        | . arhimetic_operand LOWER arhimetic_operand
   57        | . arhimetic_operand EQUAL arhimetic_operand
   58        | . arhimetic_operand NOT_EQ arhimetic_operand
   59        | . arhimetic_operand LOWER_EQ arhimetic_operand
   60        | . arhimetic_operand GREATER_EQ arhimetic_operand
   61        | . BOOL_VAL
   62        | . '(' lo_expr ')'
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 134
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    NOT         shift, and go to state 135
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 136

    $default  reduce using rule 43 (stop_cond)

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    stop_cond          go to state 209
    lo_expr            go to state 138
    numeric_val        go to state 74
    arhimetic_operand  go to state 139


State 186

   32 asign_statement: ref_val ASSIGN expr ';' .

    $default  reduce using rule 32 (asign_statement)


State 187

   33 asign_statement: ref_val MUL_ASSIGN expr ';' .

    $default  reduce using rule 33 (asign_statement)


State 188

   34 asign_statement: ref_val MOD_ASSIGN expr ';' .

    $default  reduce using rule 34 (asign_statement)


State 189

   35 asign_statement: ref_val ADD_ASSIGN expr ';' .

    $default  reduce using rule 35 (asign_statement)


State 190

   36 asign_statement: ref_val MIN_ASSIGN expr ';' .

    $default  reduce using rule 36 (asign_statement)


State 191

   37 asign_statement: ref_val DIV_ASSIGN expr ';' .

    $default  reduce using rule 37 (asign_statement)


State 192

   39 calc_statement: CALC '(' '"' arhimetic_expr . '"' ')' ';'

    '"'  shift, and go to state 210


State 193

   81 op_parameter: data_type ID ASSIGN const_value .

    $default  reduce using rule 81 (op_parameter)


State 194

   80 no_parameter: data_type ID .

    $default  reduce using rule 80 (no_parameter)


State 195

   28 function_call: ID '(' caller_params ')' ';' .

    $default  reduce using rule 28 (function_call)


State 196

   27 caller_params: expr ',' caller_params .

    $default  reduce using rule 27 (caller_params)


State 197

   38 eval_statement: EVAL '(' '"' arhimetic_expr '"' . ')' ';'

    ')'  shift, and go to state 211


State 198

   62 lo_expr: '(' lo_expr ')' .

    $default  reduce using rule 62 (lo_expr)


State 199

   53 lo_expr: lo_expr . AND lo_expr
   53        | lo_expr AND lo_expr .  [AND, ';', ')']
   54        | lo_expr . OR lo_expr

    OR  shift, and go to state 175

    $default  reduce using rule 53 (lo_expr)

    Conflict between rule 53 and token AND resolved as reduce (%left AND).
    Conflict between rule 53 and token OR resolved as shift (AND < OR).


State 200

   53 lo_expr: lo_expr . AND lo_expr
   54        | lo_expr . OR lo_expr
   54        | lo_expr OR lo_expr .  [AND, OR, ';', ')']

    $default  reduce using rule 54 (lo_expr)

    Conflict between rule 54 and token AND resolved as reduce (AND < OR).
    Conflict between rule 54 and token OR resolved as reduce (%left OR).


State 201

   57 lo_expr: arhimetic_operand EQUAL arhimetic_operand .  [AND, OR, ';', ')']
   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR

    INCR  shift, and go to state 121
    DECR  shift, and go to state 122

    $default  reduce using rule 57 (lo_expr)


State 202

   58 lo_expr: arhimetic_operand NOT_EQ arhimetic_operand .  [AND, OR, ';', ')']
   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR

    INCR  shift, and go to state 121
    DECR  shift, and go to state 122

    $default  reduce using rule 58 (lo_expr)


State 203

   59 lo_expr: arhimetic_operand LOWER_EQ arhimetic_operand .  [AND, OR, ';', ')']
   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR

    INCR  shift, and go to state 121
    DECR  shift, and go to state 122

    $default  reduce using rule 59 (lo_expr)


State 204

   60 lo_expr: arhimetic_operand GREATER_EQ arhimetic_operand .  [AND, OR, ';', ')']
   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR

    INCR  shift, and go to state 121
    DECR  shift, and go to state 122

    $default  reduce using rule 60 (lo_expr)


State 205

   55 lo_expr: arhimetic_operand GREATER arhimetic_operand .  [AND, OR, ';', ')']
   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR

    INCR  shift, and go to state 121
    DECR  shift, and go to state 122

    $default  reduce using rule 55 (lo_expr)


State 206

   56 lo_expr: arhimetic_operand LOWER arhimetic_operand .  [AND, OR, ';', ')']
   67 arhimetic_operand: arhimetic_operand . INCR
   68                  | arhimetic_operand . DECR

    INCR  shift, and go to state 121
    DECR  shift, and go to state 122

    $default  reduce using rule 56 (lo_expr)


State 207

   50 if_statement: IF condition block ELSE block .

    $default  reduce using rule 50 (if_statement)


State 208

   48 dowhile_statement: DO block WHILE condition ';' .

    $default  reduce using rule 48 (dowhile_statement)


State 209

   47 for_statement: FOR '(' loop_init ';' stop_cond . ';' loop_step ')' block

    ';'  shift, and go to state 212


State 210

   39 calc_statement: CALC '(' '"' arhimetic_expr '"' . ')' ';'

    ')'  shift, and go to state 213


State 211

   38 eval_statement: EVAL '(' '"' arhimetic_expr '"' ')' . ';'

    ';'  shift, and go to state 214


State 212

    4 const_value: . INT_VAL
    5            | . CHAR_VAL
    6            | . STRING_VAL
    7            | . BOOL_VAL
    8            | . DOUBLE_VAL
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   39 calc_statement: . CALC '(' '"' arhimetic_expr '"' ')' ';'
   44 loop_step: . expr
   45          | . %empty  [')']
   47 for_statement: FOR '(' loop_init ';' stop_cond ';' . loop_step ')' block
   63 numeric_val: . ref_val
   64            | . function_call
   65            | . const_value
   66 arhimetic_operand: . numeric_val
   67                  | . arhimetic_operand INCR
   68                  | . arhimetic_operand DECR
   69                  | . INCR arhimetic_operand
   70                  | . DECR arhimetic_operand
   71                  | . '(' arhimetic_expr ')'
   72 arhimetic_expr: . arhimetic_operand
   73               | . arhimetic_operand ADD arhimetic_operand
   74               | . arhimetic_operand MIN arhimetic_operand
   75               | . arhimetic_operand MUL arhimetic_operand
   76               | . arhimetic_operand DIV arhimetic_operand
   77               | . arhimetic_operand MOD arhimetic_operand
   78 expr: . arhimetic_expr
   79     | . calc_statement

    ID          shift, and go to state 34
    BOOL_VAL    shift, and go to state 61
    CHAR_VAL    shift, and go to state 62
    STRING_VAL  shift, and go to state 63
    INT_VAL     shift, and go to state 64
    DOUBLE_VAL  shift, and go to state 65
    CALC        shift, and go to state 66
    INCR        shift, and go to state 67
    DECR        shift, and go to state 68
    '('         shift, and go to state 69

    $default  reduce using rule 45 (loop_step)

    const_value        go to state 70
    ref_val            go to state 71
    function_call      go to state 72
    calc_statement     go to state 73
    loop_step          go to state 215
    numeric_val        go to state 74
    arhimetic_operand  go to state 75
    arhimetic_expr     go to state 76
    expr               go to state 216


State 213

   39 calc_statement: CALC '(' '"' arhimetic_expr '"' ')' . ';'

    ';'  shift, and go to state 217


State 214

   38 eval_statement: EVAL '(' '"' arhimetic_expr '"' ')' ';' .

    $default  reduce using rule 38 (eval_statement)


State 215

   47 for_statement: FOR '(' loop_init ';' stop_cond ';' loop_step . ')' block

    ')'  shift, and go to state 218


State 216

   44 loop_step: expr .

    $default  reduce using rule 44 (loop_step)


State 217

   39 calc_statement: CALC '(' '"' arhimetic_expr '"' ')' ';' .

    $default  reduce using rule 39 (calc_statement)


State 218

    1 data_type: . TRIVIAL_TIP
    2          | . SIGN_TIP
    3          | . TIP_SIGN SIGN_TIP
   11 variable_dec: . data_type variable_idendifier ';'
   12             | . data_type ID ASSIGN expr ';'
   13 statement: . variable_dec
   14          | . function_call
   15          | . if_statement
   16          | . for_statement
   17          | . while_statement
   18          | . dowhile_statement
   19          | . asign_statement
   20          | . eval_statement
   23 ref_val: . ID
   24        | . ID PMEM ID
   25        | . ID '.' ID
   28 function_call: . ID '(' caller_params ')' ';'
   29              | . ID '(' ')' ';'
   30 block: . '{' statement_list '}'
   31      | . statement
   32 asign_statement: . ref_val ASSIGN expr ';'
   33                | . ref_val MUL_ASSIGN expr ';'
   34                | . ref_val MOD_ASSIGN expr ';'
   35                | . ref_val ADD_ASSIGN expr ';'
   36                | . ref_val MIN_ASSIGN expr ';'
   37                | . ref_val DIV_ASSIGN expr ';'
   38 eval_statement: . EVAL '(' '"' arhimetic_expr '"' ')' ';'
   47 for_statement: . FOR '(' loop_init ';' stop_cond ';' loop_step ')' block
   47              | FOR '(' loop_init ';' stop_cond ';' loop_step ')' . block
   48 dowhile_statement: . DO block WHILE condition ';'
   49 while_statement: . WHILE condition block
   50 if_statement: . IF condition block ELSE block
   51             | . IF condition block

    SIGN_TIP     shift, and go to state 1
    TRIVIAL_TIP  shift, and go to state 2
    TIP_SIGN     shift, and go to state 3
    ID           shift, and go to state 34
    EVAL         shift, and go to state 35
    IF           shift, and go to state 36
    WHILE        shift, and go to state 37
    DO           shift, and go to state 38
    FOR          shift, and go to state 39
    '{'          shift, and go to state 93

    data_type          go to state 40
    variable_dec       go to state 41
    statement          go to state 94
    ref_val            go to state 44
    function_call      go to state 45
    block              go to state 219
    asign_statement    go to state 46
    eval_statement     go to state 47
    for_statement      go to state 48
    dowhile_statement  go to state 49
    while_statement    go to state 50
    if_statement       go to state 51


State 219

   47 for_statement: FOR '(' loop_init ';' stop_cond ';' loop_step ')' block .

    $default  reduce using rule 47 (for_statement)
